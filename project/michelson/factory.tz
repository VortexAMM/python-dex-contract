{ parameter
    (or (or (or (or (pair %launchExchange
                       (or %token_type_a (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                       (or %token_type_b (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                       (or %token_amount_a (nat %amount) (nat %mutez))
                       (or %token_amount_b (nat %amount) (nat %mutez))
                       (or %curve (unit %flat) (unit %product))
                       (pair %metadata
                          (string %name)
                          (string %version)
                          (string %homepage)
                          (list %authors string))
                       (pair %token_metadata
                          (string %uri)
                          (string %symbol)
                          (string %decimals)
                          (string %shouldPreferSymbol)
                          (string %thumbnailUri)))
                    (unit %launchSink))
                (or (pair %removeExchange
                       (nat %index)
                       (or %token_a (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                       (or %token_b (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)))
                    (pair %setBaker
                       (option %baker key_hash)
                       (address %dex_address)
                       (bool %freeze_baker))))
            (or (or (pair %setLqtAddress (address %dex_address) (address %lqt_address))
                    (nat %setSinkClaimLimit))
                (or (pair %updateBaker (key_hash %baker) (nat %first_pool) (nat %number_of_pools))
                    (address %updateMultisig))))
        (pair %updateSinkAddress
           (nat %number_of_pools)
           (nat %first_pool)
           (address %new_sink_address))) ;
  storage
    (pair (big_map %pairs
             (pair (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                   (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)))
             address)
          (big_map %pools nat address)
          (or %default_smak_token_type
             (or (address %fa12) (pair %fa2 address nat))
             (unit %xtz))
          (address %default_reserve)
          (option %default_sink address)
          (big_map %default_lp_metadata string bytes)
          (big_map %default_lp_allowances (pair (address %owner) (address %spender)) nat)
          (big_map %default_lp_token_metadata
             nat
             (pair (nat %token_id) (map %token_info string bytes)))
          (key_hash %default_baker)
          (nat %default_reward_rate)
          (nat %default_claim_limit)
          (big_map %default_user_rewards address (pair (nat %reward) (nat %reward_paid)))
          (nat %counter)
          (address %multisig)) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 9 ;
                         IF_NONE { PUSH nat 104 ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         DUP 3 ;
                         GET 3 ;
                         DUP ;
                         DUP 3 ;
                         IF_LEFT
                           { IF_LEFT
                               { SWAP ;
                                 IF_LEFT
                                   { IF_LEFT { SWAP ; COMPARE ; EQ } { DROP 2 ; PUSH bool False } }
                                   { DROP 2 ; PUSH bool False } }
                               { UNPAIR ;
                                 DIG 2 ;
                                 IF_LEFT
                                   { IF_LEFT
                                       { DROP 3 ; PUSH bool False }
                                       { UNPAIR ; SWAP ; DIG 3 ; COMPARE ; EQ ; SWAP ; DIG 2 ; COMPARE ; EQ ; AND } }
                                   { DROP 3 ; PUSH bool False } } }
                           { DROP ;
                             IF_LEFT
                               { IF_LEFT { DROP ; PUSH bool False } { DROP ; PUSH bool False } }
                               { DROP ; PUSH bool True } } ;
                         IF { DROP 5 ; PUSH nat 101 ; FAILWITH }
                            { DUP 5 ;
                              CAR ;
                              DUP 3 ;
                              DUP 3 ;
                              PAIR ;
                              MEM ;
                              DUP 6 ;
                              CAR ;
                              DUP 3 ;
                              DUP 5 ;
                              PAIR ;
                              MEM ;
                              OR ;
                              IF { DROP 5 ; PUSH nat 102 ; FAILWITH }
                                 { DUP 4 ;
                                   GET 5 ;
                                   IF_LEFT
                                     { UNIT ;
                                       RIGHT (or address (pair address nat)) ;
                                       DUP 4 ;
                                       COMPARE ;
                                       NEQ ;
                                       IF {} { DROP ; PUSH nat 123 ; FAILWITH } }
                                     { UNIT ;
                                       RIGHT (or address (pair address nat)) ;
                                       DUP 4 ;
                                       COMPARE ;
                                       EQ ;
                                       IF { AMOUNT ;
                                            PUSH mutez 1 ;
                                            SWAP ;
                                            EDIV ;
                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                            CAR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            COMPARE ;
                                            NEQ ;
                                            IF { DROP ; PUSH nat 132 ; FAILWITH } {} }
                                          { DROP ; PUSH nat 122 ; FAILWITH } } ;
                                   DUP 5 ;
                                   GET 7 ;
                                   IF_LEFT
                                     { UNIT ;
                                       RIGHT (or address (pair address nat)) ;
                                       DUP 4 ;
                                       COMPARE ;
                                       NEQ ;
                                       IF {} { DROP ; PUSH nat 123 ; FAILWITH } }
                                     { UNIT ;
                                       RIGHT (or address (pair address nat)) ;
                                       DUP 4 ;
                                       COMPARE ;
                                       EQ ;
                                       IF { AMOUNT ;
                                            PUSH mutez 1 ;
                                            SWAP ;
                                            EDIV ;
                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                            CAR ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            COMPARE ;
                                            NEQ ;
                                            IF { DROP ; PUSH nat 132 ; FAILWITH } {} }
                                          { DROP ; PUSH nat 122 ; FAILWITH } } ;
                                   PUSH nat 0 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   COMPARE ;
                                   EQ ;
                                   PUSH nat 0 ;
                                   DUP 4 ;
                                   COMPARE ;
                                   EQ ;
                                   OR ;
                                   IF { DROP 7 ; PUSH nat 103 ; FAILWITH }
                                      { DUP ;
                                        DUP 3 ;
                                        COMPARE ;
                                        NEQ ;
                                        UNIT ;
                                        LEFT unit ;
                                        DUP 8 ;
                                        GET 9 ;
                                        COMPARE ;
                                        EQ ;
                                        AND ;
                                        IF { DROP 7 ; PUSH nat 128 ; FAILWITH }
                                           { DUP ;
                                             DUP 3 ;
                                             MUL ;
                                             PUSH nat 3 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 2 ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH nat 1 ;
                                                  PUSH nat 2 ;
                                                  DUP 3 ;
                                                  EDIV ;
                                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                  CAR ;
                                                  ADD ;
                                                  SWAP ;
                                                  DUP ;
                                                  DIG 2 ;
                                                  PAIR ;
                                                  PAIR ;
                                                  LEFT nat ;
                                                  LOOP_LEFT
                                                    { UNPAIR ;
                                                      UNPAIR ;
                                                      DUP 3 ;
                                                      SWAP ;
                                                      DUP ;
                                                      DUG 2 ;
                                                      COMPARE ;
                                                      LT ;
                                                      IF { DIG 2 ;
                                                           DROP ;
                                                           DUP ;
                                                           DUP 3 ;
                                                           PUSH nat 2 ;
                                                           DIG 3 ;
                                                           DUP ;
                                                           DIG 5 ;
                                                           EDIV ;
                                                           IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                           CAR ;
                                                           ADD ;
                                                           EDIV ;
                                                           IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                           CAR ;
                                                           PAIR ;
                                                           PAIR ;
                                                           LEFT nat }
                                                         { DROP 2 ; RIGHT (pair (pair nat nat) nat) } } }
                                                { PUSH nat 0 ;
                                                  SWAP ;
                                                  COMPARE ;
                                                  NEQ ;
                                                  IF { PUSH nat 1 } { PUSH nat 0 } } ;
                                             DUP 8 ;
                                             GET 23 ;
                                             NOW ;
                                             NOW ;
                                             PUSH nat 0 ;
                                             PUSH nat 0 ;
                                             PUSH nat 0 ;
                                             PUSH nat 0 ;
                                             PUSH nat 0 ;
                                             DUP 16 ;
                                             GET 19 ;
                                             DUP 15 ;
                                             PUSH bool False ;
                                             SELF_ADDRESS ;
                                             DUP 19 ;
                                             GET 9 ;
                                             DUP 14 ;
                                             NONE address ;
                                             DUP 23 ;
                                             GET 5 ;
                                             DUP 23 ;
                                             GET 3 ;
                                             DUP 24 ;
                                             CAR ;
                                             DUP 20 ;
                                             DUP 22 ;
                                             PUSH bool False ;
                                             PAIR 21 ;
                                             AMOUNT ;
                                             NONE key_hash ;
                                             PAIR ;
                                             PAIR ;
                                             UNPPAIIR ;
                                             CREATE_CONTRACT
                                               { parameter
                                                   (or (or (or (or (pair %addLiquidity
                                                                      (address %owner)
                                                                      (nat %amount_token_a)
                                                                      (nat %min_lqt_minted)
                                                                      (nat %max_tokens_deposited)
                                                                      (timestamp %deadline))
                                                                   (address %claimReward))
                                                               (or (unit %default)
                                                                   (pair %removeLiquidity
                                                                      (address %rem_to)
                                                                      (nat %lqt_burned)
                                                                      (nat %min_token_a_withdrawn)
                                                                      (nat %min_token_b_withdrawn)
                                                                      (timestamp %deadline))))
                                                           (or (or (pair %setBaker (option %baker key_hash) (bool %freeze_baker))
                                                                   (address %setLqtAddress))
                                                               (or (pair %swap
                                                                      (address %t2t_to)
                                                                      (nat %tokens_sold)
                                                                      (nat %min_tokens_bought)
                                                                      (bool %a_to_b)
                                                                      (timestamp %deadline))
                                                                   (address %upadteSinkAddress))))
                                                       (or (unit %updateTokenPool)
                                                           (or %updateTokenPoolInternal
                                                              (or (or (nat %fA12InternalA) (nat %fA12InternalB))
                                                                  (or (list %fA2InternalA (pair (pair address nat) nat))
                                                                      (list %fA2InternalB (pair (pair address nat) nat))))
                                                              (unit %updateTokenEnded)))) ;
                                                 storage
                                                   (pair (bool %self_is_updating_token_pool)
                                                         (nat %token_pool_a)
                                                         (nat %token_pool_b)
                                                         (or %token_type_a (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                                         (or %token_type_b (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                                         (or %token_type_smak (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                                         (option %lqt_address address)
                                                         (nat %lqt_total)
                                                         (or %curve (unit %flat) (unit %product))
                                                         (address %manager)
                                                         (bool %freeze_baker)
                                                         (address %sink)
                                                         (nat %sink_reward_rate)
                                                         (nat %reward)
                                                         (nat %total_reward)
                                                         (nat %reward_paid)
                                                         (nat %reward_per_share)
                                                         (nat %reward_per_sec)
                                                         (timestamp %last_update_time)
                                                         (timestamp %period_finish)
                                                         (big_map %user_rewards address (pair (nat %reward) (nat %reward_paid)))) ;
                                                 code { UNPAIR ;
                                                        IF_LEFT
                                                          { IF_LEFT
                                                              { IF_LEFT
                                                                  { IF_LEFT
                                                                      { UNPAIR 5 ;
                                                                        DUP 6 ;
                                                                        CAR ;
                                                                        IF { DROP 6 ; PUSH nat 201 ; FAILWITH }
                                                                           { DIG 4 ;
                                                                             NOW ;
                                                                             COMPARE ;
                                                                             GT ;
                                                                             IF { DROP 5 ; PUSH nat 202 ; FAILWITH }
                                                                                { DUP 5 ;
                                                                                  GET 17 ;
                                                                                  IF_LEFT
                                                                                    { DROP ;
                                                                                      DUP 5 ;
                                                                                      GET 5 ;
                                                                                      DUP 6 ;
                                                                                      GET 3 ;
                                                                                      DUP 4 ;
                                                                                      MUL ;
                                                                                      EDIV ;
                                                                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                      CAR }
                                                                                    { DROP ;
                                                                                      DUP 5 ;
                                                                                      GET 3 ;
                                                                                      DUP 6 ;
                                                                                      GET 5 ;
                                                                                      DUP 4 ;
                                                                                      MUL ;
                                                                                      EDIV ;
                                                                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                      CAR } ;
                                                                                  DUP 3 ;
                                                                                  AMOUNT ;
                                                                                  PUSH mutez 1 ;
                                                                                  SWAP ;
                                                                                  EDIV ;
                                                                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                  CAR ;
                                                                                  COMPARE ;
                                                                                  NEQ ;
                                                                                  UNIT ;
                                                                                  RIGHT (or address (pair address nat)) ;
                                                                                  DUP 8 ;
                                                                                  GET 7 ;
                                                                                  COMPARE ;
                                                                                  EQ ;
                                                                                  AND ;
                                                                                  IF { DROP 6 ; PUSH nat 217 ; FAILWITH }
                                                                                     { DUP ;
                                                                                       AMOUNT ;
                                                                                       PUSH mutez 1 ;
                                                                                       SWAP ;
                                                                                       EDIV ;
                                                                                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                       CAR ;
                                                                                       COMPARE ;
                                                                                       LT ;
                                                                                       UNIT ;
                                                                                       RIGHT (or address (pair address nat)) ;
                                                                                       DUP 8 ;
                                                                                       GET 9 ;
                                                                                       COMPARE ;
                                                                                       EQ ;
                                                                                       AND ;
                                                                                       IF { DROP 6 ; PUSH nat 217 ; FAILWITH }
                                                                                          { DUP 6 ;
                                                                                            GET 3 ;
                                                                                            DUP 7 ;
                                                                                            GET 15 ;
                                                                                            DUP 5 ;
                                                                                            MUL ;
                                                                                            EDIV ;
                                                                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                            CAR ;
                                                                                            DUP 7 ;
                                                                                            GET 5 ;
                                                                                            DUP 8 ;
                                                                                            GET 15 ;
                                                                                            DUP 4 ;
                                                                                            MUL ;
                                                                                            EDIV ;
                                                                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                            CAR ;
                                                                                            DUP ;
                                                                                            DUP 3 ;
                                                                                            COMPARE ;
                                                                                            LE ;
                                                                                            IF { DROP } { SWAP ; DROP } ;
                                                                                            DIG 5 ;
                                                                                            DUP 3 ;
                                                                                            COMPARE ;
                                                                                            GT ;
                                                                                            IF { DROP 6 ; PUSH nat 203 ; FAILWITH }
                                                                                               { DIG 4 ;
                                                                                                 SWAP ;
                                                                                                 DUP ;
                                                                                                 DUG 2 ;
                                                                                                 COMPARE ;
                                                                                                 LT ;
                                                                                                 IF { DROP 5 ; PUSH nat 204 ; FAILWITH }
                                                                                                    { DUP 5 ;
                                                                                                      GET 15 ;
                                                                                                      SWAP ;
                                                                                                      DUP ;
                                                                                                      DUG 2 ;
                                                                                                      ADD ;
                                                                                                      DUP 6 ;
                                                                                                      GET 3 ;
                                                                                                      DUP 6 ;
                                                                                                      ADD ;
                                                                                                      DUP 7 ;
                                                                                                      GET 5 ;
                                                                                                      DUP 5 ;
                                                                                                      ADD ;
                                                                                                      DIG 6 ;
                                                                                                      SELF_ADDRESS ;
                                                                                                      SENDER ;
                                                                                                      DUP 10 ;
                                                                                                      GET 7 ;
                                                                                                      PAIR 4 ;
                                                                                                      UNPAIR 4 ;
                                                                                                      PUSH nat 0 ;
                                                                                                      DUP 5 ;
                                                                                                      COMPARE ;
                                                                                                      EQ ;
                                                                                                      IF { DROP 4 ; NONE operation }
                                                                                                         { IF_LEFT
                                                                                                             { IF_LEFT
                                                                                                                 { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                                                                                   IF_NONE { PUSH nat 205 ; FAILWITH } {} ;
                                                                                                                   PUSH mutez 0 ;
                                                                                                                   DIG 4 ;
                                                                                                                   DIG 4 ;
                                                                                                                   DIG 4 ;
                                                                                                                   PAIR 3 ;
                                                                                                                   TRANSFER_TOKENS ;
                                                                                                                   SOME }
                                                                                                                 { UNPAIR ;
                                                                                                                   CONTRACT %transfer
                                                                                                                     (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                                                                                   IF_NONE { PUSH nat 206 ; FAILWITH } {} ;
                                                                                                                   PUSH mutez 0 ;
                                                                                                                   NIL (pair address (list (pair address nat nat))) ;
                                                                                                                   NIL (pair address nat nat) ;
                                                                                                                   DIG 7 ;
                                                                                                                   DIG 5 ;
                                                                                                                   DIG 7 ;
                                                                                                                   PAIR 3 ;
                                                                                                                   CONS ;
                                                                                                                   DIG 4 ;
                                                                                                                   PAIR ;
                                                                                                                   CONS ;
                                                                                                                   TRANSFER_TOKENS ;
                                                                                                                   SOME } }
                                                                                                             { DROP 2 ;
                                                                                                               SELF_ADDRESS ;
                                                                                                               SWAP ;
                                                                                                               DUP ;
                                                                                                               DUG 2 ;
                                                                                                               COMPARE ;
                                                                                                               EQ ;
                                                                                                               IF { DROP 2 ; NONE operation }
                                                                                                                  { CONTRACT unit ;
                                                                                                                    IF_NONE { PUSH nat 207 ; FAILWITH } {} ;
                                                                                                                    PUSH mutez 1 ;
                                                                                                                    DIG 2 ;
                                                                                                                    MUL ;
                                                                                                                    UNIT ;
                                                                                                                    TRANSFER_TOKENS ;
                                                                                                                    SOME } } } ;
                                                                                                      DIG 5 ;
                                                                                                      SELF_ADDRESS ;
                                                                                                      SENDER ;
                                                                                                      DUP 10 ;
                                                                                                      GET 9 ;
                                                                                                      PAIR 4 ;
                                                                                                      UNPAIR 4 ;
                                                                                                      PUSH nat 0 ;
                                                                                                      DUP 5 ;
                                                                                                      COMPARE ;
                                                                                                      EQ ;
                                                                                                      IF { DROP 4 ; NONE operation }
                                                                                                         { IF_LEFT
                                                                                                             { IF_LEFT
                                                                                                                 { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                                                                                   IF_NONE { PUSH nat 205 ; FAILWITH } {} ;
                                                                                                                   PUSH mutez 0 ;
                                                                                                                   DIG 4 ;
                                                                                                                   DIG 4 ;
                                                                                                                   DIG 4 ;
                                                                                                                   PAIR 3 ;
                                                                                                                   TRANSFER_TOKENS ;
                                                                                                                   SOME }
                                                                                                                 { UNPAIR ;
                                                                                                                   CONTRACT %transfer
                                                                                                                     (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                                                                                   IF_NONE { PUSH nat 206 ; FAILWITH } {} ;
                                                                                                                   PUSH mutez 0 ;
                                                                                                                   NIL (pair address (list (pair address nat nat))) ;
                                                                                                                   NIL (pair address nat nat) ;
                                                                                                                   DIG 7 ;
                                                                                                                   DIG 5 ;
                                                                                                                   DIG 7 ;
                                                                                                                   PAIR 3 ;
                                                                                                                   CONS ;
                                                                                                                   DIG 4 ;
                                                                                                                   PAIR ;
                                                                                                                   CONS ;
                                                                                                                   TRANSFER_TOKENS ;
                                                                                                                   SOME } }
                                                                                                             { DROP 2 ;
                                                                                                               SELF_ADDRESS ;
                                                                                                               SWAP ;
                                                                                                               DUP ;
                                                                                                               DUG 2 ;
                                                                                                               COMPARE ;
                                                                                                               EQ ;
                                                                                                               IF { DROP 2 ; NONE operation }
                                                                                                                  { CONTRACT unit ;
                                                                                                                    IF_NONE { PUSH nat 207 ; FAILWITH } {} ;
                                                                                                                    PUSH mutez 1 ;
                                                                                                                    DIG 2 ;
                                                                                                                    MUL ;
                                                                                                                    UNIT ;
                                                                                                                    TRANSFER_TOKENS ;
                                                                                                                    SOME } } } ;
                                                                                                      DUP 6 ;
                                                                                                      INT ;
                                                                                                      PUSH int 0 ;
                                                                                                      SWAP ;
                                                                                                      DUP ;
                                                                                                      DUG 2 ;
                                                                                                      COMPARE ;
                                                                                                      EQ ;
                                                                                                      IF { DIG 7 ; DROP 2 ; NONE operation }
                                                                                                         { DUP 9 ;
                                                                                                           GET 13 ;
                                                                                                           IF_NONE { PUSH nat 208 ; FAILWITH } {} ;
                                                                                                           CONTRACT %mintOrBurn (pair (int %quantity) (address %target)) ;
                                                                                                           IF_NONE { PUSH nat 209 ; FAILWITH } {} ;
                                                                                                           PUSH mutez 0 ;
                                                                                                           DIG 9 ;
                                                                                                           DIG 3 ;
                                                                                                           PAIR ;
                                                                                                           TRANSFER_TOKENS ;
                                                                                                           SOME } ;
                                                                                                      NIL operation ;
                                                                                                      NIL (option operation) ;
                                                                                                      DIG 2 ;
                                                                                                      CONS ;
                                                                                                      DIG 2 ;
                                                                                                      CONS ;
                                                                                                      DIG 2 ;
                                                                                                      CONS ;
                                                                                                      ITER { IF_NONE {} { CONS } } ;
                                                                                                      UNIT ;
                                                                                                      RIGHT (or address (pair address nat)) ;
                                                                                                      DUP 7 ;
                                                                                                      GET 9 ;
                                                                                                      COMPARE ;
                                                                                                      EQ ;
                                                                                                      UNIT ;
                                                                                                      RIGHT (or address (pair address nat)) ;
                                                                                                      DUP 8 ;
                                                                                                      GET 7 ;
                                                                                                      COMPARE ;
                                                                                                      EQ ;
                                                                                                      OR ;
                                                                                                      IF { SENDER ;
                                                                                                           DUP 7 ;
                                                                                                           GET 13 ;
                                                                                                           IF_NONE { PUSH nat 208 ; FAILWITH } {} ;
                                                                                                           SWAP ;
                                                                                                           VIEW "balance_of_view" nat ;
                                                                                                           IF_NONE { PUSH string "View returned an error" ; FAILWITH } {} ;
                                                                                                           DIG 5 ;
                                                                                                           SWAP ;
                                                                                                           DUP ;
                                                                                                           DUG 2 ;
                                                                                                           ADD ;
                                                                                                           DUP 7 ;
                                                                                                           GET 39 ;
                                                                                                           NOW ;
                                                                                                           COMPARE ;
                                                                                                           GT ;
                                                                                                           IF { DUP 7 ; GET 39 } { NOW } ;
                                                                                                           DUP 8 ;
                                                                                                           GET 35 ;
                                                                                                           DUP 9 ;
                                                                                                           GET 37 ;
                                                                                                           DIG 2 ;
                                                                                                           SUB ;
                                                                                                           ABS ;
                                                                                                           MUL ;
                                                                                                           DUP 8 ;
                                                                                                           GET 15 ;
                                                                                                           SWAP ;
                                                                                                           DUP ;
                                                                                                           DUG 2 ;
                                                                                                           EDIV ;
                                                                                                           IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                           CAR ;
                                                                                                           DUP 9 ;
                                                                                                           GET 33 ;
                                                                                                           ADD ;
                                                                                                           NOW ;
                                                                                                           DUP 10 ;
                                                                                                           GET 39 ;
                                                                                                           NOW ;
                                                                                                           COMPARE ;
                                                                                                           GT ;
                                                                                                           IF { SWAP ;
                                                                                                                DIG 2 ;
                                                                                                                DROP 2 ;
                                                                                                                DUP 8 ;
                                                                                                                GET 39 ;
                                                                                                                NOW ;
                                                                                                                SUB ;
                                                                                                                DUP ;
                                                                                                                ABS ;
                                                                                                                PUSH nat 1000000000000 ;
                                                                                                                DUP 11 ;
                                                                                                                GET 27 ;
                                                                                                                MUL ;
                                                                                                                EDIV ;
                                                                                                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                                CAR ;
                                                                                                                DUP ;
                                                                                                                DUP 3 ;
                                                                                                                ABS ;
                                                                                                                MUL ;
                                                                                                                DIG 2 ;
                                                                                                                DUP 11 ;
                                                                                                                GET 39 ;
                                                                                                                ADD ;
                                                                                                                DUP 11 ;
                                                                                                                GET 15 ;
                                                                                                                DIG 2 ;
                                                                                                                EDIV ;
                                                                                                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                                CAR ;
                                                                                                                DUP 11 ;
                                                                                                                GET 33 ;
                                                                                                                ADD ;
                                                                                                                UNIT ;
                                                                                                                RIGHT (or address (pair address nat)) ;
                                                                                                                DUP 12 ;
                                                                                                                GET 7 ;
                                                                                                                COMPARE ;
                                                                                                                EQ ;
                                                                                                                IF { DUP 11 ; GET 3 } { DUP 11 ; GET 5 } ;
                                                                                                                BALANCE ;
                                                                                                                PUSH mutez 1 ;
                                                                                                                SWAP ;
                                                                                                                EDIV ;
                                                                                                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                                CAR ;
                                                                                                                SUB ;
                                                                                                                ABS ;
                                                                                                                DIG 11 ;
                                                                                                                DIG 2 ;
                                                                                                                UPDATE 33 ;
                                                                                                                DIG 4 ;
                                                                                                                UPDATE 37 ;
                                                                                                                DIG 3 ;
                                                                                                                UPDATE 35 ;
                                                                                                                DIG 2 ;
                                                                                                                UPDATE 39 ;
                                                                                                                PUSH nat 0 ;
                                                                                                                UPDATE 27 ;
                                                                                                                SWAP ;
                                                                                                                UPDATE 29 }
                                                                                                              { DIG 9 ; DIG 2 ; UPDATE 33 ; SWAP ; UPDATE 37 ; SWAP ; UPDATE 27 } ;
                                                                                                           SWAP ;
                                                                                                           DIG 2 ;
                                                                                                           SENDER ;
                                                                                                           PAIR 4 ;
                                                                                                           UNPAIR 4 ;
                                                                                                           DUP 4 ;
                                                                                                           GET 40 ;
                                                                                                           SWAP ;
                                                                                                           DUP ;
                                                                                                           DUG 2 ;
                                                                                                           GET ;
                                                                                                           IF_NONE { PUSH nat 0 ; PUSH nat 0 ; PAIR } {} ;
                                                                                                           DUP 5 ;
                                                                                                           GET 33 ;
                                                                                                           DIG 3 ;
                                                                                                           MUL ;
                                                                                                           SWAP ;
                                                                                                           DUP ;
                                                                                                           DUG 2 ;
                                                                                                           CDR ;
                                                                                                           SWAP ;
                                                                                                           SUB ;
                                                                                                           ABS ;
                                                                                                           SWAP ;
                                                                                                           CAR ;
                                                                                                           ADD ;
                                                                                                           DUP 4 ;
                                                                                                           GET 33 ;
                                                                                                           DIG 3 ;
                                                                                                           MUL ;
                                                                                                           DIG 3 ;
                                                                                                           DUP ;
                                                                                                           GET 40 ;
                                                                                                           DIG 2 ;
                                                                                                           DIG 3 ;
                                                                                                           PAIR ;
                                                                                                           SOME ;
                                                                                                           DIG 3 ;
                                                                                                           UPDATE ;
                                                                                                           UPDATE 40 ;
                                                                                                           DIG 4 ;
                                                                                                           UPDATE 15 ;
                                                                                                           DIG 3 ;
                                                                                                           UPDATE 3 ;
                                                                                                           DIG 2 ;
                                                                                                           UPDATE 5 ;
                                                                                                           SWAP ;
                                                                                                           PAIR }
                                                                                                         { DIG 4 ;
                                                                                                           DROP ;
                                                                                                           DIG 4 ;
                                                                                                           DIG 4 ;
                                                                                                           UPDATE 15 ;
                                                                                                           DIG 3 ;
                                                                                                           UPDATE 3 ;
                                                                                                           DIG 2 ;
                                                                                                           UPDATE 5 ;
                                                                                                           SWAP ;
                                                                                                           PAIR } } } } } } } }
                                                                      { UNIT ;
                                                                        RIGHT (or address (pair address nat)) ;
                                                                        DUP 3 ;
                                                                        GET 9 ;
                                                                        COMPARE ;
                                                                        NEQ ;
                                                                        UNIT ;
                                                                        RIGHT (or address (pair address nat)) ;
                                                                        DUP 4 ;
                                                                        GET 7 ;
                                                                        COMPARE ;
                                                                        NEQ ;
                                                                        AND ;
                                                                        IF { DROP 2 ; PUSH nat 251 ; FAILWITH }
                                                                           { SWAP ;
                                                                             DUP ;
                                                                             DUG 2 ;
                                                                             GET 13 ;
                                                                             IF_NONE { PUSH nat 208 ; FAILWITH } {} ;
                                                                             SENDER ;
                                                                             VIEW "balance_of_view" nat ;
                                                                             IF_NONE { PUSH string "View returned an error" ; FAILWITH } {} ;
                                                                             DUP 3 ;
                                                                             GET 39 ;
                                                                             NOW ;
                                                                             COMPARE ;
                                                                             GT ;
                                                                             IF { DUP 3 ; GET 39 } { NOW } ;
                                                                             DUP 4 ;
                                                                             GET 35 ;
                                                                             DUP 5 ;
                                                                             GET 37 ;
                                                                             DIG 2 ;
                                                                             SUB ;
                                                                             ABS ;
                                                                             MUL ;
                                                                             DUP 4 ;
                                                                             GET 15 ;
                                                                             SWAP ;
                                                                             DUP ;
                                                                             DUG 2 ;
                                                                             EDIV ;
                                                                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                             CAR ;
                                                                             DUP 5 ;
                                                                             GET 33 ;
                                                                             ADD ;
                                                                             NOW ;
                                                                             DUP 6 ;
                                                                             GET 39 ;
                                                                             NOW ;
                                                                             COMPARE ;
                                                                             GT ;
                                                                             IF { SWAP ;
                                                                                  DIG 2 ;
                                                                                  DROP 2 ;
                                                                                  DUP 4 ;
                                                                                  GET 39 ;
                                                                                  NOW ;
                                                                                  SUB ;
                                                                                  DUP ;
                                                                                  ABS ;
                                                                                  PUSH nat 1000000000000 ;
                                                                                  DUP 7 ;
                                                                                  GET 27 ;
                                                                                  MUL ;
                                                                                  EDIV ;
                                                                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                  CAR ;
                                                                                  DUP ;
                                                                                  DUP 3 ;
                                                                                  ABS ;
                                                                                  MUL ;
                                                                                  DIG 2 ;
                                                                                  DUP 7 ;
                                                                                  GET 39 ;
                                                                                  ADD ;
                                                                                  DUP 7 ;
                                                                                  GET 15 ;
                                                                                  DIG 2 ;
                                                                                  EDIV ;
                                                                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                  CAR ;
                                                                                  DUP 7 ;
                                                                                  GET 33 ;
                                                                                  ADD ;
                                                                                  UNIT ;
                                                                                  RIGHT (or address (pair address nat)) ;
                                                                                  DUP 8 ;
                                                                                  GET 7 ;
                                                                                  COMPARE ;
                                                                                  EQ ;
                                                                                  IF { DUP 7 ; GET 3 } { DUP 7 ; GET 5 } ;
                                                                                  BALANCE ;
                                                                                  PUSH mutez 1 ;
                                                                                  SWAP ;
                                                                                  EDIV ;
                                                                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                  CAR ;
                                                                                  SUB ;
                                                                                  ABS ;
                                                                                  DUP 8 ;
                                                                                  DIG 2 ;
                                                                                  UPDATE 33 ;
                                                                                  DIG 4 ;
                                                                                  UPDATE 37 ;
                                                                                  DIG 3 ;
                                                                                  UPDATE 35 ;
                                                                                  DIG 2 ;
                                                                                  UPDATE 39 ;
                                                                                  PUSH nat 0 ;
                                                                                  UPDATE 27 ;
                                                                                  SWAP ;
                                                                                  UPDATE 29 }
                                                                                { DUP 6 ; DIG 2 ; UPDATE 33 ; SWAP ; UPDATE 37 ; SWAP ; UPDATE 27 } ;
                                                                             SWAP ;
                                                                             DUP ;
                                                                             SENDER ;
                                                                             PAIR 4 ;
                                                                             UNPAIR 4 ;
                                                                             DUP 4 ;
                                                                             GET 40 ;
                                                                             SWAP ;
                                                                             DUP ;
                                                                             DUG 2 ;
                                                                             GET ;
                                                                             IF_NONE { PUSH nat 0 ; PUSH nat 0 ; PAIR } {} ;
                                                                             DUP 5 ;
                                                                             GET 33 ;
                                                                             DIG 3 ;
                                                                             MUL ;
                                                                             SWAP ;
                                                                             DUP ;
                                                                             DUG 2 ;
                                                                             CDR ;
                                                                             SWAP ;
                                                                             SUB ;
                                                                             ABS ;
                                                                             SWAP ;
                                                                             CAR ;
                                                                             ADD ;
                                                                             DUP 4 ;
                                                                             GET 33 ;
                                                                             DIG 3 ;
                                                                             MUL ;
                                                                             DIG 3 ;
                                                                             DUP ;
                                                                             GET 40 ;
                                                                             DIG 2 ;
                                                                             DIG 3 ;
                                                                             PAIR ;
                                                                             SOME ;
                                                                             DIG 3 ;
                                                                             UPDATE ;
                                                                             UPDATE 40 ;
                                                                             DUP ;
                                                                             SENDER ;
                                                                             SWAP ;
                                                                             GET 40 ;
                                                                             SWAP ;
                                                                             GET ;
                                                                             IF_NONE { PUSH nat 0 ; PUSH nat 0 ; PAIR } {} ;
                                                                             PUSH nat 1000000000000 ;
                                                                             SWAP ;
                                                                             DUP ;
                                                                             DUG 2 ;
                                                                             CAR ;
                                                                             EDIV ;
                                                                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                             CAR ;
                                                                             DUP ;
                                                                             DUP 6 ;
                                                                             GET 31 ;
                                                                             ADD ;
                                                                             PUSH nat 0 ;
                                                                             DUP 3 ;
                                                                             COMPARE ;
                                                                             EQ ;
                                                                             IF { SWAP ; DIG 4 ; DROP 2 ; NIL operation }
                                                                                { BALANCE ;
                                                                                  PUSH mutez 1 ;
                                                                                  SWAP ;
                                                                                  EDIV ;
                                                                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                  CAR ;
                                                                                  DUP 3 ;
                                                                                  COMPARE ;
                                                                                  GT ;
                                                                                  IF { SWAP ; DIG 4 ; DROP 2 ; PUSH nat 250 ; FAILWITH }
                                                                                     { NIL operation ;
                                                                                       DIG 5 ;
                                                                                       CONTRACT unit ;
                                                                                       IF_NONE { PUSH nat 207 ; FAILWITH } {} ;
                                                                                       PUSH mutez 1 ;
                                                                                       DIG 4 ;
                                                                                       MUL ;
                                                                                       UNIT ;
                                                                                       TRANSFER_TOKENS ;
                                                                                       CONS } } ;
                                                                             DIG 4 ;
                                                                             GET 40 ;
                                                                             DIG 3 ;
                                                                             PUSH nat 0 ;
                                                                             UPDATE 1 ;
                                                                             SOME ;
                                                                             SENDER ;
                                                                             UPDATE ;
                                                                             DIG 3 ;
                                                                             SWAP ;
                                                                             UPDATE 40 ;
                                                                             DIG 2 ;
                                                                             UPDATE 31 ;
                                                                             SWAP ;
                                                                             PAIR } } }
                                                                  { IF_LEFT
                                                                      { DROP ;
                                                                        UNIT ;
                                                                        RIGHT (or address (pair address nat)) ;
                                                                        SWAP ;
                                                                        DUP ;
                                                                        DUG 2 ;
                                                                        GET 9 ;
                                                                        COMPARE ;
                                                                        NEQ ;
                                                                        UNIT ;
                                                                        RIGHT (or address (pair address nat)) ;
                                                                        DUP 3 ;
                                                                        GET 7 ;
                                                                        COMPARE ;
                                                                        NEQ ;
                                                                        AND ;
                                                                        IF { DROP ; PUSH nat 231 ; FAILWITH }
                                                                           { AMOUNT ;
                                                                             PUSH mutez 1 ;
                                                                             SWAP ;
                                                                             EDIV ;
                                                                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                             CAR ;
                                                                             UPDATE 27 ;
                                                                             DUP ;
                                                                             GET 39 ;
                                                                             NOW ;
                                                                             COMPARE ;
                                                                             GT ;
                                                                             IF { DUP ; GET 39 } { NOW } ;
                                                                             SWAP ;
                                                                             DUP ;
                                                                             DUG 2 ;
                                                                             GET 35 ;
                                                                             DUP 3 ;
                                                                             GET 37 ;
                                                                             DIG 2 ;
                                                                             SUB ;
                                                                             ABS ;
                                                                             MUL ;
                                                                             SWAP ;
                                                                             DUP ;
                                                                             DUG 2 ;
                                                                             GET 15 ;
                                                                             SWAP ;
                                                                             DUP ;
                                                                             DUG 2 ;
                                                                             EDIV ;
                                                                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                             CAR ;
                                                                             DUP 3 ;
                                                                             GET 33 ;
                                                                             ADD ;
                                                                             NOW ;
                                                                             DUP 4 ;
                                                                             GET 39 ;
                                                                             NOW ;
                                                                             COMPARE ;
                                                                             GT ;
                                                                             IF { SWAP ;
                                                                                  DIG 2 ;
                                                                                  DROP 2 ;
                                                                                  SWAP ;
                                                                                  DUP ;
                                                                                  DUG 2 ;
                                                                                  GET 39 ;
                                                                                  NOW ;
                                                                                  SUB ;
                                                                                  DUP ;
                                                                                  ABS ;
                                                                                  PUSH nat 1000000000000 ;
                                                                                  DUP 5 ;
                                                                                  GET 27 ;
                                                                                  MUL ;
                                                                                  EDIV ;
                                                                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                  CAR ;
                                                                                  DUP ;
                                                                                  DUP 3 ;
                                                                                  ABS ;
                                                                                  MUL ;
                                                                                  DIG 2 ;
                                                                                  DUP 5 ;
                                                                                  GET 39 ;
                                                                                  ADD ;
                                                                                  DUP 5 ;
                                                                                  GET 15 ;
                                                                                  DIG 2 ;
                                                                                  EDIV ;
                                                                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                  CAR ;
                                                                                  DUP 5 ;
                                                                                  GET 33 ;
                                                                                  ADD ;
                                                                                  UNIT ;
                                                                                  RIGHT (or address (pair address nat)) ;
                                                                                  DUP 6 ;
                                                                                  GET 7 ;
                                                                                  COMPARE ;
                                                                                  EQ ;
                                                                                  IF { DUP 5 ; GET 3 } { DUP 5 ; GET 5 } ;
                                                                                  BALANCE ;
                                                                                  PUSH mutez 1 ;
                                                                                  SWAP ;
                                                                                  EDIV ;
                                                                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                  CAR ;
                                                                                  SUB ;
                                                                                  ABS ;
                                                                                  DIG 5 ;
                                                                                  DIG 2 ;
                                                                                  UPDATE 33 ;
                                                                                  DIG 4 ;
                                                                                  UPDATE 37 ;
                                                                                  DIG 3 ;
                                                                                  UPDATE 35 ;
                                                                                  DIG 2 ;
                                                                                  UPDATE 39 ;
                                                                                  PUSH nat 0 ;
                                                                                  UPDATE 27 ;
                                                                                  SWAP ;
                                                                                  UPDATE 29 }
                                                                                { DIG 3 ; DIG 2 ; UPDATE 33 ; SWAP ; UPDATE 37 ; SWAP ; UPDATE 27 } ;
                                                                             NIL operation ;
                                                                             PAIR } }
                                                                      { UNPAIR 5 ;
                                                                        DUP 6 ;
                                                                        CAR ;
                                                                        IF { DROP 6 ; PUSH nat 201 ; FAILWITH }
                                                                           { DIG 4 ;
                                                                             NOW ;
                                                                             COMPARE ;
                                                                             GT ;
                                                                             IF { DROP 5 ; PUSH nat 210 ; FAILWITH }
                                                                                { DUP 5 ;
                                                                                  GET 15 ;
                                                                                  DUP 6 ;
                                                                                  GET 3 ;
                                                                                  DUP 4 ;
                                                                                  MUL ;
                                                                                  EDIV ;
                                                                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                  CAR ;
                                                                                  DUP 6 ;
                                                                                  GET 15 ;
                                                                                  DUP 7 ;
                                                                                  GET 5 ;
                                                                                  DUP 5 ;
                                                                                  MUL ;
                                                                                  EDIV ;
                                                                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                  CAR ;
                                                                                  DIG 4 ;
                                                                                  DUP 3 ;
                                                                                  COMPARE ;
                                                                                  LT ;
                                                                                  IF { DROP 6 ; PUSH nat 211 ; FAILWITH }
                                                                                     { DIG 4 ;
                                                                                       SWAP ;
                                                                                       DUP ;
                                                                                       DUG 2 ;
                                                                                       COMPARE ;
                                                                                       LT ;
                                                                                       IF { DROP 5 ; PUSH nat 211 ; FAILWITH }
                                                                                          { DUP 4 ;
                                                                                            DUP 6 ;
                                                                                            GET 15 ;
                                                                                            SUB ;
                                                                                            ISNAT ;
                                                                                            IF_NONE { PUSH nat 212 ; FAILWITH } {} ;
                                                                                            DUP 3 ;
                                                                                            DUP 7 ;
                                                                                            GET 3 ;
                                                                                            SUB ;
                                                                                            ISNAT ;
                                                                                            IF_NONE { PUSH nat 213 ; FAILWITH } {} ;
                                                                                            DUP 3 ;
                                                                                            DUP 8 ;
                                                                                            GET 5 ;
                                                                                            SUB ;
                                                                                            ISNAT ;
                                                                                            IF_NONE { PUSH nat 213 ; FAILWITH } {} ;
                                                                                            DUP 7 ;
                                                                                            PUSH int 0 ;
                                                                                            SUB ;
                                                                                            SENDER ;
                                                                                            DUP 10 ;
                                                                                            PAIR 3 ;
                                                                                            UNPAIR 3 ;
                                                                                            PUSH int 0 ;
                                                                                            DUP 4 ;
                                                                                            COMPARE ;
                                                                                            EQ ;
                                                                                            IF { DROP 3 ; NONE operation }
                                                                                               { GET 13 ;
                                                                                                 IF_NONE { PUSH nat 208 ; FAILWITH } {} ;
                                                                                                 CONTRACT %mintOrBurn (pair (int %quantity) (address %target)) ;
                                                                                                 IF_NONE { PUSH nat 209 ; FAILWITH } {} ;
                                                                                                 PUSH mutez 0 ;
                                                                                                 DIG 2 ;
                                                                                                 DIG 3 ;
                                                                                                 PAIR ;
                                                                                                 TRANSFER_TOKENS ;
                                                                                                 SOME } ;
                                                                                            DIG 4 ;
                                                                                            DUP 7 ;
                                                                                            SELF_ADDRESS ;
                                                                                            DUP 11 ;
                                                                                            GET 9 ;
                                                                                            PAIR 4 ;
                                                                                            UNPAIR 4 ;
                                                                                            PUSH nat 0 ;
                                                                                            DUP 5 ;
                                                                                            COMPARE ;
                                                                                            EQ ;
                                                                                            IF { DROP 4 ; NONE operation }
                                                                                               { IF_LEFT
                                                                                                   { IF_LEFT
                                                                                                       { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                                                                         IF_NONE { PUSH nat 205 ; FAILWITH } {} ;
                                                                                                         PUSH mutez 0 ;
                                                                                                         DIG 4 ;
                                                                                                         DIG 4 ;
                                                                                                         DIG 4 ;
                                                                                                         PAIR 3 ;
                                                                                                         TRANSFER_TOKENS ;
                                                                                                         SOME }
                                                                                                       { UNPAIR ;
                                                                                                         CONTRACT %transfer
                                                                                                           (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                                                                         IF_NONE { PUSH nat 206 ; FAILWITH } {} ;
                                                                                                         PUSH mutez 0 ;
                                                                                                         NIL (pair address (list (pair address nat nat))) ;
                                                                                                         NIL (pair address nat nat) ;
                                                                                                         DIG 7 ;
                                                                                                         DIG 5 ;
                                                                                                         DIG 7 ;
                                                                                                         PAIR 3 ;
                                                                                                         CONS ;
                                                                                                         DIG 4 ;
                                                                                                         PAIR ;
                                                                                                         CONS ;
                                                                                                         TRANSFER_TOKENS ;
                                                                                                         SOME } }
                                                                                                   { DROP 2 ;
                                                                                                     SELF_ADDRESS ;
                                                                                                     SWAP ;
                                                                                                     DUP ;
                                                                                                     DUG 2 ;
                                                                                                     COMPARE ;
                                                                                                     EQ ;
                                                                                                     IF { DROP 2 ; NONE operation }
                                                                                                        { CONTRACT unit ;
                                                                                                          IF_NONE { PUSH nat 207 ; FAILWITH } {} ;
                                                                                                          PUSH mutez 1 ;
                                                                                                          DIG 2 ;
                                                                                                          MUL ;
                                                                                                          UNIT ;
                                                                                                          TRANSFER_TOKENS ;
                                                                                                          SOME } } } ;
                                                                                            DIG 5 ;
                                                                                            DIG 6 ;
                                                                                            SELF_ADDRESS ;
                                                                                            DUP 10 ;
                                                                                            GET 7 ;
                                                                                            PAIR 4 ;
                                                                                            UNPAIR 4 ;
                                                                                            PUSH nat 0 ;
                                                                                            DUP 5 ;
                                                                                            COMPARE ;
                                                                                            EQ ;
                                                                                            IF { DROP 4 ; NONE operation }
                                                                                               { IF_LEFT
                                                                                                   { IF_LEFT
                                                                                                       { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                                                                         IF_NONE { PUSH nat 205 ; FAILWITH } {} ;
                                                                                                         PUSH mutez 0 ;
                                                                                                         DIG 4 ;
                                                                                                         DIG 4 ;
                                                                                                         DIG 4 ;
                                                                                                         PAIR 3 ;
                                                                                                         TRANSFER_TOKENS ;
                                                                                                         SOME }
                                                                                                       { UNPAIR ;
                                                                                                         CONTRACT %transfer
                                                                                                           (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                                                                         IF_NONE { PUSH nat 206 ; FAILWITH } {} ;
                                                                                                         PUSH mutez 0 ;
                                                                                                         NIL (pair address (list (pair address nat nat))) ;
                                                                                                         NIL (pair address nat nat) ;
                                                                                                         DIG 7 ;
                                                                                                         DIG 5 ;
                                                                                                         DIG 7 ;
                                                                                                         PAIR 3 ;
                                                                                                         CONS ;
                                                                                                         DIG 4 ;
                                                                                                         PAIR ;
                                                                                                         CONS ;
                                                                                                         TRANSFER_TOKENS ;
                                                                                                         SOME } }
                                                                                                   { DROP 2 ;
                                                                                                     SELF_ADDRESS ;
                                                                                                     SWAP ;
                                                                                                     DUP ;
                                                                                                     DUG 2 ;
                                                                                                     COMPARE ;
                                                                                                     EQ ;
                                                                                                     IF { DROP 2 ; NONE operation }
                                                                                                        { CONTRACT unit ;
                                                                                                          IF_NONE { PUSH nat 207 ; FAILWITH } {} ;
                                                                                                          PUSH mutez 1 ;
                                                                                                          DIG 2 ;
                                                                                                          MUL ;
                                                                                                          UNIT ;
                                                                                                          TRANSFER_TOKENS ;
                                                                                                          SOME } } } ;
                                                                                            NIL operation ;
                                                                                            NIL (option operation) ;
                                                                                            DIG 4 ;
                                                                                            CONS ;
                                                                                            DIG 3 ;
                                                                                            CONS ;
                                                                                            DIG 2 ;
                                                                                            CONS ;
                                                                                            ITER { IF_NONE {} { CONS } } ;
                                                                                            UNIT ;
                                                                                            RIGHT (or address (pair address nat)) ;
                                                                                            DUP 7 ;
                                                                                            GET 9 ;
                                                                                            COMPARE ;
                                                                                            EQ ;
                                                                                            UNIT ;
                                                                                            RIGHT (or address (pair address nat)) ;
                                                                                            DUP 8 ;
                                                                                            GET 7 ;
                                                                                            COMPARE ;
                                                                                            EQ ;
                                                                                            OR ;
                                                                                            IF { SENDER ;
                                                                                                 DUP 7 ;
                                                                                                 GET 13 ;
                                                                                                 IF_NONE { PUSH nat 208 ; FAILWITH } {} ;
                                                                                                 SWAP ;
                                                                                                 VIEW "balance_of_view" nat ;
                                                                                                 IF_NONE { PUSH string "View returned an error" ; FAILWITH } {} ;
                                                                                                 DIG 5 ;
                                                                                                 SWAP ;
                                                                                                 DUP ;
                                                                                                 DUG 2 ;
                                                                                                 SUB ;
                                                                                                 ISNAT ;
                                                                                                 IF_NONE { PUSH nat 249 ; FAILWITH } {} ;
                                                                                                 DUP 7 ;
                                                                                                 GET 39 ;
                                                                                                 NOW ;
                                                                                                 COMPARE ;
                                                                                                 GT ;
                                                                                                 IF { DUP 7 ; GET 39 } { NOW } ;
                                                                                                 DUP 8 ;
                                                                                                 GET 35 ;
                                                                                                 DUP 9 ;
                                                                                                 GET 37 ;
                                                                                                 DIG 2 ;
                                                                                                 SUB ;
                                                                                                 ABS ;
                                                                                                 MUL ;
                                                                                                 DUP 8 ;
                                                                                                 GET 15 ;
                                                                                                 SWAP ;
                                                                                                 DUP ;
                                                                                                 DUG 2 ;
                                                                                                 EDIV ;
                                                                                                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                 CAR ;
                                                                                                 DUP 9 ;
                                                                                                 GET 33 ;
                                                                                                 ADD ;
                                                                                                 NOW ;
                                                                                                 DUP 10 ;
                                                                                                 GET 39 ;
                                                                                                 NOW ;
                                                                                                 COMPARE ;
                                                                                                 GT ;
                                                                                                 IF { SWAP ;
                                                                                                      DIG 2 ;
                                                                                                      DROP 2 ;
                                                                                                      DUP 8 ;
                                                                                                      GET 39 ;
                                                                                                      NOW ;
                                                                                                      SUB ;
                                                                                                      DUP ;
                                                                                                      ABS ;
                                                                                                      PUSH nat 1000000000000 ;
                                                                                                      DUP 11 ;
                                                                                                      GET 27 ;
                                                                                                      MUL ;
                                                                                                      EDIV ;
                                                                                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                      CAR ;
                                                                                                      DUP ;
                                                                                                      DUP 3 ;
                                                                                                      ABS ;
                                                                                                      MUL ;
                                                                                                      DIG 2 ;
                                                                                                      DUP 11 ;
                                                                                                      GET 39 ;
                                                                                                      ADD ;
                                                                                                      DUP 11 ;
                                                                                                      GET 15 ;
                                                                                                      DIG 2 ;
                                                                                                      EDIV ;
                                                                                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                      CAR ;
                                                                                                      DUP 11 ;
                                                                                                      GET 33 ;
                                                                                                      ADD ;
                                                                                                      UNIT ;
                                                                                                      RIGHT (or address (pair address nat)) ;
                                                                                                      DUP 12 ;
                                                                                                      GET 7 ;
                                                                                                      COMPARE ;
                                                                                                      EQ ;
                                                                                                      IF { DUP 11 ; GET 3 } { DUP 11 ; GET 5 } ;
                                                                                                      BALANCE ;
                                                                                                      PUSH mutez 1 ;
                                                                                                      SWAP ;
                                                                                                      EDIV ;
                                                                                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                      CAR ;
                                                                                                      SUB ;
                                                                                                      ABS ;
                                                                                                      DIG 11 ;
                                                                                                      DIG 2 ;
                                                                                                      UPDATE 33 ;
                                                                                                      DIG 4 ;
                                                                                                      UPDATE 37 ;
                                                                                                      DIG 3 ;
                                                                                                      UPDATE 35 ;
                                                                                                      DIG 2 ;
                                                                                                      UPDATE 39 ;
                                                                                                      PUSH nat 0 ;
                                                                                                      UPDATE 27 ;
                                                                                                      SWAP ;
                                                                                                      UPDATE 29 }
                                                                                                    { DIG 9 ; DIG 2 ; UPDATE 33 ; SWAP ; UPDATE 37 ; SWAP ; UPDATE 27 } ;
                                                                                                 SWAP ;
                                                                                                 DIG 2 ;
                                                                                                 SENDER ;
                                                                                                 PAIR 4 ;
                                                                                                 UNPAIR 4 ;
                                                                                                 DUP 4 ;
                                                                                                 GET 40 ;
                                                                                                 SWAP ;
                                                                                                 DUP ;
                                                                                                 DUG 2 ;
                                                                                                 GET ;
                                                                                                 IF_NONE { PUSH nat 0 ; PUSH nat 0 ; PAIR } {} ;
                                                                                                 DUP 5 ;
                                                                                                 GET 33 ;
                                                                                                 DIG 3 ;
                                                                                                 MUL ;
                                                                                                 SWAP ;
                                                                                                 DUP ;
                                                                                                 DUG 2 ;
                                                                                                 CDR ;
                                                                                                 SWAP ;
                                                                                                 SUB ;
                                                                                                 ABS ;
                                                                                                 SWAP ;
                                                                                                 CAR ;
                                                                                                 ADD ;
                                                                                                 DUP 4 ;
                                                                                                 GET 33 ;
                                                                                                 DIG 3 ;
                                                                                                 MUL ;
                                                                                                 DIG 3 ;
                                                                                                 DUP ;
                                                                                                 GET 40 ;
                                                                                                 DIG 2 ;
                                                                                                 DIG 3 ;
                                                                                                 PAIR ;
                                                                                                 SOME ;
                                                                                                 DIG 3 ;
                                                                                                 UPDATE ;
                                                                                                 UPDATE 40 ;
                                                                                                 DIG 4 ;
                                                                                                 UPDATE 15 ;
                                                                                                 DIG 3 ;
                                                                                                 UPDATE 3 ;
                                                                                                 DIG 2 ;
                                                                                                 UPDATE 5 ;
                                                                                                 SWAP ;
                                                                                                 PAIR }
                                                                                               { DIG 4 ;
                                                                                                 DROP ;
                                                                                                 DIG 4 ;
                                                                                                 DIG 4 ;
                                                                                                 UPDATE 15 ;
                                                                                                 DIG 3 ;
                                                                                                 UPDATE 3 ;
                                                                                                 DIG 2 ;
                                                                                                 UPDATE 5 ;
                                                                                                 SWAP ;
                                                                                                 PAIR } } } } } } } }
                                                              { IF_LEFT
                                                                  { IF_LEFT
                                                                      { SWAP ;
                                                                        DUP ;
                                                                        DUG 2 ;
                                                                        CAR ;
                                                                        IF { DROP 2 ; PUSH nat 229 ; FAILWITH }
                                                                           { PUSH mutez 0 ;
                                                                             AMOUNT ;
                                                                             COMPARE ;
                                                                             NEQ ;
                                                                             IF { DROP 2 ; PUSH nat 235 ; FAILWITH }
                                                                                { SWAP ;
                                                                                  DUP ;
                                                                                  DUG 2 ;
                                                                                  GET 21 ;
                                                                                  IF { DROP 2 ; PUSH nat 234 ; FAILWITH }
                                                                                     { SWAP ;
                                                                                       DUP ;
                                                                                       DUG 2 ;
                                                                                       GET 19 ;
                                                                                       SENDER ;
                                                                                       COMPARE ;
                                                                                       NEQ ;
                                                                                       IF { DROP 2 ; PUSH nat 233 ; FAILWITH }
                                                                                          { UNPAIR ;
                                                                                            DUG 2 ;
                                                                                            UPDATE 21 ;
                                                                                            NIL operation ;
                                                                                            DIG 2 ;
                                                                                            SET_DELEGATE ;
                                                                                            CONS ;
                                                                                            PAIR } } } } }
                                                                      { SWAP ;
                                                                        DUP ;
                                                                        DUG 2 ;
                                                                        CAR ;
                                                                        IF { DROP 2 ; PUSH nat 201 ; FAILWITH }
                                                                           { SWAP ;
                                                                             DUP ;
                                                                             DUG 2 ;
                                                                             GET 19 ;
                                                                             SENDER ;
                                                                             COMPARE ;
                                                                             NEQ ;
                                                                             IF { DROP 2 ; PUSH nat 220 ; FAILWITH }
                                                                                { SOME ; UPDATE 13 ; NIL operation ; PAIR } } } }
                                                                  { IF_LEFT
                                                                      { UNPAIR 5 ;
                                                                        DUP 6 ;
                                                                        CAR ;
                                                                        IF { DROP 6 ; PUSH nat 201 ; FAILWITH }
                                                                           { DIG 4 ;
                                                                             NOW ;
                                                                             COMPARE ;
                                                                             GT ;
                                                                             IF { DROP 5 ; PUSH nat 214 ; FAILWITH }
                                                                                { PUSH mutez 0 ;
                                                                                  AMOUNT ;
                                                                                  COMPARE ;
                                                                                  EQ ;
                                                                                  UNIT ;
                                                                                  RIGHT (or address (pair address nat)) ;
                                                                                  DUP 7 ;
                                                                                  GET 9 ;
                                                                                  COMPARE ;
                                                                                  EQ ;
                                                                                  DUP 6 ;
                                                                                  NOT ;
                                                                                  AND ;
                                                                                  AND ;
                                                                                  PUSH mutez 0 ;
                                                                                  AMOUNT ;
                                                                                  COMPARE ;
                                                                                  EQ ;
                                                                                  UNIT ;
                                                                                  RIGHT (or address (pair address nat)) ;
                                                                                  DUP 8 ;
                                                                                  GET 7 ;
                                                                                  COMPARE ;
                                                                                  EQ ;
                                                                                  DUP 7 ;
                                                                                  AND ;
                                                                                  AND ;
                                                                                  OR ;
                                                                                  IF { DROP 5 ; PUSH nat 238 ; FAILWITH }
                                                                                     { PUSH mutez 0 ;
                                                                                       AMOUNT ;
                                                                                       COMPARE ;
                                                                                       NEQ ;
                                                                                       UNIT ;
                                                                                       RIGHT (or address (pair address nat)) ;
                                                                                       DUP 7 ;
                                                                                       GET 9 ;
                                                                                       COMPARE ;
                                                                                       NEQ ;
                                                                                       DUP 6 ;
                                                                                       NOT ;
                                                                                       AND ;
                                                                                       AND ;
                                                                                       PUSH mutez 0 ;
                                                                                       AMOUNT ;
                                                                                       COMPARE ;
                                                                                       NEQ ;
                                                                                       UNIT ;
                                                                                       RIGHT (or address (pair address nat)) ;
                                                                                       DUP 8 ;
                                                                                       GET 7 ;
                                                                                       COMPARE ;
                                                                                       NEQ ;
                                                                                       DUP 7 ;
                                                                                       AND ;
                                                                                       AND ;
                                                                                       OR ;
                                                                                       IF { DROP 5 ; PUSH nat 231 ; FAILWITH }
                                                                                          { DUP 4 ;
                                                                                            IF { DUP 5 ;
                                                                                                 GET 9 ;
                                                                                                 DUP 6 ;
                                                                                                 GET 5 ;
                                                                                                 PAIR ;
                                                                                                 DUP 6 ;
                                                                                                 GET 7 ;
                                                                                                 DUP 7 ;
                                                                                                 GET 3 ;
                                                                                                 PAIR ;
                                                                                                 PAIR }
                                                                                               { DUP 5 ;
                                                                                                 GET 7 ;
                                                                                                 DUP 6 ;
                                                                                                 GET 3 ;
                                                                                                 PAIR ;
                                                                                                 DUP 6 ;
                                                                                                 GET 9 ;
                                                                                                 DUP 7 ;
                                                                                                 GET 5 ;
                                                                                                 PAIR ;
                                                                                                 PAIR } ;
                                                                                            UNPAIR ;
                                                                                            UNPAIR ;
                                                                                            DIG 2 ;
                                                                                            UNPAIR ;
                                                                                            PUSH nat 10000 ;
                                                                                            PUSH nat 2 ;
                                                                                            DUP 8 ;
                                                                                            MUL ;
                                                                                            EDIV ;
                                                                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                            CAR ;
                                                                                            PUSH nat 10000 ;
                                                                                            DUP 8 ;
                                                                                            EDIV ;
                                                                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                            CAR ;
                                                                                            DUP ;
                                                                                            DUP 3 ;
                                                                                            ADD ;
                                                                                            DUP 12 ;
                                                                                            GET 17 ;
                                                                                            IF_LEFT
                                                                                              { DROP ;
                                                                                                PUSH nat 10000 ;
                                                                                                PUSH nat 9990 ;
                                                                                                DUP 11 ;
                                                                                                MUL ;
                                                                                                EDIV ;
                                                                                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                CAR }
                                                                                              { DROP ;
                                                                                                PUSH nat 10000 ;
                                                                                                PUSH nat 9972 ;
                                                                                                DUP 11 ;
                                                                                                MUL ;
                                                                                                EDIV ;
                                                                                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                CAR } ;
                                                                                            DUP 13 ;
                                                                                            GET 17 ;
                                                                                            IF_LEFT
                                                                                              { DROP ;
                                                                                                DUP 5 ;
                                                                                                DUP 8 ;
                                                                                                ADD ;
                                                                                                DUP 6 ;
                                                                                                DUP 9 ;
                                                                                                SUB ;
                                                                                                SWAP ;
                                                                                                DUP ;
                                                                                                DUP ;
                                                                                                DUG 3 ;
                                                                                                MUL ;
                                                                                                DUP ;
                                                                                                MUL ;
                                                                                                DUP ;
                                                                                                MUL ;
                                                                                                DIG 2 ;
                                                                                                SWAP ;
                                                                                                DUP ;
                                                                                                DUG 2 ;
                                                                                                EDIV ;
                                                                                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                CAR ;
                                                                                                DIG 2 ;
                                                                                                DUP ;
                                                                                                DUP ;
                                                                                                DUG 4 ;
                                                                                                MUL ;
                                                                                                DUP ;
                                                                                                MUL ;
                                                                                                DUP ;
                                                                                                MUL ;
                                                                                                PUSH int 0 ;
                                                                                                DUP 5 ;
                                                                                                COMPARE ;
                                                                                                EQ ;
                                                                                                IF { DIG 3 ; DROP ; PUSH int 0 }
                                                                                                   { DIG 3 ;
                                                                                                     SWAP ;
                                                                                                     DUP ;
                                                                                                     DUG 2 ;
                                                                                                     EDIV ;
                                                                                                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                     CAR } ;
                                                                                                DIG 2 ;
                                                                                                ADD ;
                                                                                                ABS ;
                                                                                                PUSH nat 8 ;
                                                                                                MUL ;
                                                                                                SWAP ;
                                                                                                DIG 2 ;
                                                                                                SUB ;
                                                                                                ABS ;
                                                                                                SWAP ;
                                                                                                DROP ;
                                                                                                DIG 5 ;
                                                                                                DIG 7 ;
                                                                                                PAIR ;
                                                                                                SWAP ;
                                                                                                PUSH int 5 ;
                                                                                                PAIR ;
                                                                                                PUSH nat 0 ;
                                                                                                DIG 3 ;
                                                                                                PAIR ;
                                                                                                PAIR ;
                                                                                                PAIR ;
                                                                                                LEFT nat ;
                                                                                                LOOP_LEFT
                                                                                                  { PUSH int 0 ;
                                                                                                    SWAP ;
                                                                                                    DUP ;
                                                                                                    DUG 2 ;
                                                                                                    CAR ;
                                                                                                    CDR ;
                                                                                                    CAR ;
                                                                                                    COMPARE ;
                                                                                                    EQ ;
                                                                                                    IF { CAR ; CAR ; CDR ; RIGHT (pair (pair (pair nat nat) (pair int nat)) (pair nat nat)) }
                                                                                                       { DUP ;
                                                                                                         CAR ;
                                                                                                         CAR ;
                                                                                                         CDR ;
                                                                                                         SWAP ;
                                                                                                         DUP ;
                                                                                                         DUG 2 ;
                                                                                                         CDR ;
                                                                                                         CDR ;
                                                                                                         SUB ;
                                                                                                         ABS ;
                                                                                                         SWAP ;
                                                                                                         DUP ;
                                                                                                         DUG 2 ;
                                                                                                         CAR ;
                                                                                                         CAR ;
                                                                                                         CAR ;
                                                                                                         DUP 3 ;
                                                                                                         CDR ;
                                                                                                         CAR ;
                                                                                                         ADD ;
                                                                                                         SWAP ;
                                                                                                         DUP ;
                                                                                                         DUG 2 ;
                                                                                                         SWAP ;
                                                                                                         DUP ;
                                                                                                         DUG 2 ;
                                                                                                         ADD ;
                                                                                                         DUG 2 ;
                                                                                                         SUB ;
                                                                                                         SWAP ;
                                                                                                         DUP ;
                                                                                                         DUP ;
                                                                                                         DUG 3 ;
                                                                                                         MUL ;
                                                                                                         DUP ;
                                                                                                         MUL ;
                                                                                                         DUP ;
                                                                                                         MUL ;
                                                                                                         DIG 2 ;
                                                                                                         SWAP ;
                                                                                                         DUP ;
                                                                                                         DUG 2 ;
                                                                                                         EDIV ;
                                                                                                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                         CAR ;
                                                                                                         DIG 2 ;
                                                                                                         DUP ;
                                                                                                         DUP ;
                                                                                                         DUG 4 ;
                                                                                                         MUL ;
                                                                                                         DUP ;
                                                                                                         MUL ;
                                                                                                         DUP ;
                                                                                                         MUL ;
                                                                                                         PUSH int 0 ;
                                                                                                         DUP 5 ;
                                                                                                         COMPARE ;
                                                                                                         EQ ;
                                                                                                         IF { DIG 3 ; DROP ; PUSH int 0 }
                                                                                                            { DIG 3 ;
                                                                                                              SWAP ;
                                                                                                              DUP ;
                                                                                                              DUG 2 ;
                                                                                                              EDIV ;
                                                                                                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                              CAR } ;
                                                                                                         DIG 2 ;
                                                                                                         ADD ;
                                                                                                         ABS ;
                                                                                                         PUSH nat 8 ;
                                                                                                         MUL ;
                                                                                                         SWAP ;
                                                                                                         DIG 2 ;
                                                                                                         SUB ;
                                                                                                         ABS ;
                                                                                                         SWAP ;
                                                                                                         DUP 3 ;
                                                                                                         CAR ;
                                                                                                         CDR ;
                                                                                                         CDR ;
                                                                                                         DIG 2 ;
                                                                                                         SUB ;
                                                                                                         EDIV ;
                                                                                                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                         CAR ;
                                                                                                         ABS ;
                                                                                                         SWAP ;
                                                                                                         DUP ;
                                                                                                         DUG 2 ;
                                                                                                         CAR ;
                                                                                                         CAR ;
                                                                                                         CDR ;
                                                                                                         ADD ;
                                                                                                         SWAP ;
                                                                                                         DUP ;
                                                                                                         DUG 2 ;
                                                                                                         CDR ;
                                                                                                         DUP 3 ;
                                                                                                         CAR ;
                                                                                                         CDR ;
                                                                                                         DIG 2 ;
                                                                                                         DUP 4 ;
                                                                                                         CAR ;
                                                                                                         CAR ;
                                                                                                         CAR ;
                                                                                                         PAIR ;
                                                                                                         PAIR ;
                                                                                                         PAIR ;
                                                                                                         DUP ;
                                                                                                         CDR ;
                                                                                                         SWAP ;
                                                                                                         DUP ;
                                                                                                         DUG 2 ;
                                                                                                         CAR ;
                                                                                                         CDR ;
                                                                                                         CDR ;
                                                                                                         PUSH int 1 ;
                                                                                                         DIG 4 ;
                                                                                                         CAR ;
                                                                                                         CDR ;
                                                                                                         CAR ;
                                                                                                         SUB ;
                                                                                                         PAIR ;
                                                                                                         DIG 2 ;
                                                                                                         CAR ;
                                                                                                         CAR ;
                                                                                                         PAIR ;
                                                                                                         PAIR ;
                                                                                                         LEFT nat } } }
                                                                                              { DROP ;
                                                                                                DUP ;
                                                                                                DIG 7 ;
                                                                                                ADD ;
                                                                                                DIG 5 ;
                                                                                                DIG 2 ;
                                                                                                MUL ;
                                                                                                EDIV ;
                                                                                                IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                CAR } ;
                                                                                            DIG 8 ;
                                                                                            SWAP ;
                                                                                            DUP ;
                                                                                            DUG 2 ;
                                                                                            COMPARE ;
                                                                                            LT ;
                                                                                            IF { DROP 10 ; PUSH nat 215 ; FAILWITH }
                                                                                               { DUP 9 ;
                                                                                                 IF { DUP ;
                                                                                                      DUP 11 ;
                                                                                                      GET 5 ;
                                                                                                      SUB ;
                                                                                                      DIG 2 ;
                                                                                                      DUP 9 ;
                                                                                                      DUP 12 ;
                                                                                                      GET 3 ;
                                                                                                      ADD ;
                                                                                                      SUB ;
                                                                                                      PAIR }
                                                                                                    { SWAP ;
                                                                                                      DUP 8 ;
                                                                                                      DUP 11 ;
                                                                                                      GET 5 ;
                                                                                                      ADD ;
                                                                                                      SUB ;
                                                                                                      SWAP ;
                                                                                                      DUP ;
                                                                                                      DUG 2 ;
                                                                                                      DUP 11 ;
                                                                                                      GET 3 ;
                                                                                                      SUB ;
                                                                                                      PAIR } ;
                                                                                                 UNPAIR ;
                                                                                                 ISNAT ;
                                                                                                 IF_NONE { PUSH nat 216 ; FAILWITH } {} ;
                                                                                                 SWAP ;
                                                                                                 ISNAT ;
                                                                                                 IF_NONE { PUSH nat 216 ; FAILWITH } {} ;
                                                                                                 DIG 8 ;
                                                                                                 SELF_ADDRESS ;
                                                                                                 SENDER ;
                                                                                                 DUP 10 ;
                                                                                                 PAIR 4 ;
                                                                                                 UNPAIR 4 ;
                                                                                                 PUSH nat 0 ;
                                                                                                 DUP 5 ;
                                                                                                 COMPARE ;
                                                                                                 EQ ;
                                                                                                 IF { DROP 4 ; NONE operation }
                                                                                                    { IF_LEFT
                                                                                                        { IF_LEFT
                                                                                                            { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                                                                              IF_NONE { PUSH nat 205 ; FAILWITH } {} ;
                                                                                                              PUSH mutez 0 ;
                                                                                                              DIG 4 ;
                                                                                                              DIG 4 ;
                                                                                                              DIG 4 ;
                                                                                                              PAIR 3 ;
                                                                                                              TRANSFER_TOKENS ;
                                                                                                              SOME }
                                                                                                            { UNPAIR ;
                                                                                                              CONTRACT %transfer
                                                                                                                (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                                                                              IF_NONE { PUSH nat 206 ; FAILWITH } {} ;
                                                                                                              PUSH mutez 0 ;
                                                                                                              NIL (pair address (list (pair address nat nat))) ;
                                                                                                              NIL (pair address nat nat) ;
                                                                                                              DIG 7 ;
                                                                                                              DIG 5 ;
                                                                                                              DIG 7 ;
                                                                                                              PAIR 3 ;
                                                                                                              CONS ;
                                                                                                              DIG 4 ;
                                                                                                              PAIR ;
                                                                                                              CONS ;
                                                                                                              TRANSFER_TOKENS ;
                                                                                                              SOME } }
                                                                                                        { DROP 2 ;
                                                                                                          SELF_ADDRESS ;
                                                                                                          SWAP ;
                                                                                                          DUP ;
                                                                                                          DUG 2 ;
                                                                                                          COMPARE ;
                                                                                                          EQ ;
                                                                                                          IF { DROP 2 ; NONE operation }
                                                                                                             { CONTRACT unit ;
                                                                                                               IF_NONE { PUSH nat 207 ; FAILWITH } {} ;
                                                                                                               PUSH mutez 1 ;
                                                                                                               DIG 2 ;
                                                                                                               MUL ;
                                                                                                               UNIT ;
                                                                                                               TRANSFER_TOKENS ;
                                                                                                               SOME } } } ;
                                                                                                 DUP 11 ;
                                                                                                 GET 11 ;
                                                                                                 DUP 8 ;
                                                                                                 COMPARE ;
                                                                                                 EQ ;
                                                                                                 DUP 12 ;
                                                                                                 GET 23 ;
                                                                                                 SENDER ;
                                                                                                 COMPARE ;
                                                                                                 EQ ;
                                                                                                 AND ;
                                                                                                 IF { PUSH nat 10000 ;
                                                                                                      DUP 12 ;
                                                                                                      GET 25 ;
                                                                                                      DUP 6 ;
                                                                                                      MUL ;
                                                                                                      EDIV ;
                                                                                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                                                      CAR ;
                                                                                                      NIL (option operation) ;
                                                                                                      SWAP ;
                                                                                                      DUP ;
                                                                                                      DUG 2 ;
                                                                                                      DIG 6 ;
                                                                                                      SUB ;
                                                                                                      ABS ;
                                                                                                      PUSH address "tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU" ;
                                                                                                      SELF_ADDRESS ;
                                                                                                      DUP 11 ;
                                                                                                      PAIR 4 ;
                                                                                                      UNPAIR 4 ;
                                                                                                      PUSH nat 0 ;
                                                                                                      DUP 5 ;
                                                                                                      COMPARE ;
                                                                                                      EQ ;
                                                                                                      IF { DROP 4 ; NONE operation }
                                                                                                         { IF_LEFT
                                                                                                             { IF_LEFT
                                                                                                                 { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                                                                                   IF_NONE { PUSH nat 205 ; FAILWITH } {} ;
                                                                                                                   PUSH mutez 0 ;
                                                                                                                   DIG 4 ;
                                                                                                                   DIG 4 ;
                                                                                                                   DIG 4 ;
                                                                                                                   PAIR 3 ;
                                                                                                                   TRANSFER_TOKENS ;
                                                                                                                   SOME }
                                                                                                                 { UNPAIR ;
                                                                                                                   CONTRACT %transfer
                                                                                                                     (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                                                                                   IF_NONE { PUSH nat 206 ; FAILWITH } {} ;
                                                                                                                   PUSH mutez 0 ;
                                                                                                                   NIL (pair address (list (pair address nat nat))) ;
                                                                                                                   NIL (pair address nat nat) ;
                                                                                                                   DIG 7 ;
                                                                                                                   DIG 5 ;
                                                                                                                   DIG 7 ;
                                                                                                                   PAIR 3 ;
                                                                                                                   CONS ;
                                                                                                                   DIG 4 ;
                                                                                                                   PAIR ;
                                                                                                                   CONS ;
                                                                                                                   TRANSFER_TOKENS ;
                                                                                                                   SOME } }
                                                                                                             { DROP 2 ;
                                                                                                               SELF_ADDRESS ;
                                                                                                               SWAP ;
                                                                                                               DUP ;
                                                                                                               DUG 2 ;
                                                                                                               COMPARE ;
                                                                                                               EQ ;
                                                                                                               IF { DROP 2 ; NONE operation }
                                                                                                                  { CONTRACT unit ;
                                                                                                                    IF_NONE { PUSH nat 207 ; FAILWITH } {} ;
                                                                                                                    PUSH mutez 1 ;
                                                                                                                    DIG 2 ;
                                                                                                                    MUL ;
                                                                                                                    UNIT ;
                                                                                                                    TRANSFER_TOKENS ;
                                                                                                                    SOME } } } ;
                                                                                                      CONS ;
                                                                                                      SWAP ;
                                                                                                      DIG 9 ;
                                                                                                      SELF_ADDRESS ;
                                                                                                      DUP 10 ;
                                                                                                      PAIR 4 ;
                                                                                                      UNPAIR 4 ;
                                                                                                      PUSH nat 0 ;
                                                                                                      DUP 5 ;
                                                                                                      COMPARE ;
                                                                                                      EQ ;
                                                                                                      IF { DROP 4 ; NONE operation }
                                                                                                         { IF_LEFT
                                                                                                             { IF_LEFT
                                                                                                                 { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                                                                                   IF_NONE { PUSH nat 205 ; FAILWITH } {} ;
                                                                                                                   PUSH mutez 0 ;
                                                                                                                   DIG 4 ;
                                                                                                                   DIG 4 ;
                                                                                                                   DIG 4 ;
                                                                                                                   PAIR 3 ;
                                                                                                                   TRANSFER_TOKENS ;
                                                                                                                   SOME }
                                                                                                                 { UNPAIR ;
                                                                                                                   CONTRACT %transfer
                                                                                                                     (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                                                                                   IF_NONE { PUSH nat 206 ; FAILWITH } {} ;
                                                                                                                   PUSH mutez 0 ;
                                                                                                                   NIL (pair address (list (pair address nat nat))) ;
                                                                                                                   NIL (pair address nat nat) ;
                                                                                                                   DIG 7 ;
                                                                                                                   DIG 5 ;
                                                                                                                   DIG 7 ;
                                                                                                                   PAIR 3 ;
                                                                                                                   CONS ;
                                                                                                                   DIG 4 ;
                                                                                                                   PAIR ;
                                                                                                                   CONS ;
                                                                                                                   TRANSFER_TOKENS ;
                                                                                                                   SOME } }
                                                                                                             { DROP 2 ;
                                                                                                               SELF_ADDRESS ;
                                                                                                               SWAP ;
                                                                                                               DUP ;
                                                                                                               DUG 2 ;
                                                                                                               COMPARE ;
                                                                                                               EQ ;
                                                                                                               IF { DROP 2 ; NONE operation }
                                                                                                                  { CONTRACT unit ;
                                                                                                                    IF_NONE { PUSH nat 207 ; FAILWITH } {} ;
                                                                                                                    PUSH mutez 1 ;
                                                                                                                    DIG 2 ;
                                                                                                                    MUL ;
                                                                                                                    UNIT ;
                                                                                                                    TRANSFER_TOKENS ;
                                                                                                                    SOME } } } ;
                                                                                                      CONS }
                                                                                                    { NIL (option operation) ;
                                                                                                      DIG 4 ;
                                                                                                      DIG 9 ;
                                                                                                      SELF_ADDRESS ;
                                                                                                      DUP 10 ;
                                                                                                      PAIR 4 ;
                                                                                                      UNPAIR 4 ;
                                                                                                      PUSH nat 0 ;
                                                                                                      DUP 5 ;
                                                                                                      COMPARE ;
                                                                                                      EQ ;
                                                                                                      IF { DROP 4 ; NONE operation }
                                                                                                         { IF_LEFT
                                                                                                             { IF_LEFT
                                                                                                                 { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                                                                                   IF_NONE { PUSH nat 205 ; FAILWITH } {} ;
                                                                                                                   PUSH mutez 0 ;
                                                                                                                   DIG 4 ;
                                                                                                                   DIG 4 ;
                                                                                                                   DIG 4 ;
                                                                                                                   PAIR 3 ;
                                                                                                                   TRANSFER_TOKENS ;
                                                                                                                   SOME }
                                                                                                                 { UNPAIR ;
                                                                                                                   CONTRACT %transfer
                                                                                                                     (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                                                                                   IF_NONE { PUSH nat 206 ; FAILWITH } {} ;
                                                                                                                   PUSH mutez 0 ;
                                                                                                                   NIL (pair address (list (pair address nat nat))) ;
                                                                                                                   NIL (pair address nat nat) ;
                                                                                                                   DIG 7 ;
                                                                                                                   DIG 5 ;
                                                                                                                   DIG 7 ;
                                                                                                                   PAIR 3 ;
                                                                                                                   CONS ;
                                                                                                                   DIG 4 ;
                                                                                                                   PAIR ;
                                                                                                                   CONS ;
                                                                                                                   TRANSFER_TOKENS ;
                                                                                                                   SOME } }
                                                                                                             { DROP 2 ;
                                                                                                               SELF_ADDRESS ;
                                                                                                               SWAP ;
                                                                                                               DUP ;
                                                                                                               DUG 2 ;
                                                                                                               COMPARE ;
                                                                                                               EQ ;
                                                                                                               IF { DROP 2 ; NONE operation }
                                                                                                                  { CONTRACT unit ;
                                                                                                                    IF_NONE { PUSH nat 207 ; FAILWITH } {} ;
                                                                                                                    PUSH mutez 1 ;
                                                                                                                    DIG 2 ;
                                                                                                                    MUL ;
                                                                                                                    UNIT ;
                                                                                                                    TRANSFER_TOKENS ;
                                                                                                                    SOME } } } ;
                                                                                                      CONS } ;
                                                                                                 PUSH nat 0 ;
                                                                                                 DUP 6 ;
                                                                                                 COMPARE ;
                                                                                                 EQ ;
                                                                                                 PUSH nat 0 ;
                                                                                                 DUP 8 ;
                                                                                                 COMPARE ;
                                                                                                 EQ ;
                                                                                                 AND ;
                                                                                                 IF { DIG 4 ; DIG 5 ; DIG 6 ; DIG 7 ; DIG 8 ; DROP 5 ; NIL (option operation) }
                                                                                                    { DUP 10 ;
                                                                                                      GET 23 ;
                                                                                                      CONTRACT %deposit
                                                                                                        (pair (or %token_to_deposit (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                                                                                              (or %reference_token (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                                                                                              (nat %burn_amount)
                                                                                                              (nat %reserve_amount)
                                                                                                              (bool %direction)) ;
                                                                                                      IF_NONE { PUSH nat 239 ; FAILWITH } {} ;
                                                                                                      UNIT ;
                                                                                                      RIGHT (or address (pair address nat)) ;
                                                                                                      DUP 10 ;
                                                                                                      COMPARE ;
                                                                                                      EQ ;
                                                                                                      IF { DUP 6 ; DUP 8 ; ADD ; PUSH mutez 1 ; SWAP ; MUL } { PUSH mutez 0 } ;
                                                                                                      UNIT ;
                                                                                                      RIGHT (or address (pair address nat)) ;
                                                                                                      DUP 11 ;
                                                                                                      COMPARE ;
                                                                                                      EQ ;
                                                                                                      IF { NONE operation }
                                                                                                         { DUP 7 ;
                                                                                                           DUP 9 ;
                                                                                                           ADD ;
                                                                                                           DUP 13 ;
                                                                                                           GET 23 ;
                                                                                                           SELF_ADDRESS ;
                                                                                                           DUP 13 ;
                                                                                                           PAIR 4 ;
                                                                                                           UNPAIR 4 ;
                                                                                                           PUSH nat 0 ;
                                                                                                           DUP 5 ;
                                                                                                           COMPARE ;
                                                                                                           EQ ;
                                                                                                           IF { DROP 4 ; NONE operation }
                                                                                                              { IF_LEFT
                                                                                                                  { IF_LEFT
                                                                                                                      { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                                                                                        IF_NONE { PUSH nat 205 ; FAILWITH } {} ;
                                                                                                                        PUSH mutez 0 ;
                                                                                                                        DIG 4 ;
                                                                                                                        DIG 4 ;
                                                                                                                        DIG 4 ;
                                                                                                                        PAIR 3 ;
                                                                                                                        TRANSFER_TOKENS ;
                                                                                                                        SOME }
                                                                                                                      { UNPAIR ;
                                                                                                                        CONTRACT %transfer
                                                                                                                          (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                                                                                        IF_NONE { PUSH nat 206 ; FAILWITH } {} ;
                                                                                                                        PUSH mutez 0 ;
                                                                                                                        NIL (pair address (list (pair address nat nat))) ;
                                                                                                                        NIL (pair address nat nat) ;
                                                                                                                        DIG 7 ;
                                                                                                                        DIG 5 ;
                                                                                                                        DIG 7 ;
                                                                                                                        PAIR 3 ;
                                                                                                                        CONS ;
                                                                                                                        DIG 4 ;
                                                                                                                        PAIR ;
                                                                                                                        CONS ;
                                                                                                                        TRANSFER_TOKENS ;
                                                                                                                        SOME } }
                                                                                                                  { DROP 2 ;
                                                                                                                    SELF_ADDRESS ;
                                                                                                                    SWAP ;
                                                                                                                    DUP ;
                                                                                                                    DUG 2 ;
                                                                                                                    COMPARE ;
                                                                                                                    EQ ;
                                                                                                                    IF { DROP 2 ; NONE operation }
                                                                                                                       { CONTRACT unit ;
                                                                                                                         IF_NONE { PUSH nat 207 ; FAILWITH } {} ;
                                                                                                                         PUSH mutez 1 ;
                                                                                                                         DIG 2 ;
                                                                                                                         MUL ;
                                                                                                                         UNIT ;
                                                                                                                         TRANSFER_TOKENS ;
                                                                                                                         SOME } } } } ;
                                                                                                      DUG 2 ;
                                                                                                      DIG 11 ;
                                                                                                      DIG 8 ;
                                                                                                      DIG 9 ;
                                                                                                      DIG 10 ;
                                                                                                      DIG 11 ;
                                                                                                      PAIR 5 ;
                                                                                                      TRANSFER_TOKENS ;
                                                                                                      SOME ;
                                                                                                      NIL (option operation) ;
                                                                                                      SWAP ;
                                                                                                      CONS ;
                                                                                                      SWAP ;
                                                                                                      CONS } ;
                                                                                                 NIL operation ;
                                                                                                 SWAP ;
                                                                                                 ITER { IF_NONE {} { CONS } } ;
                                                                                                 NIL operation ;
                                                                                                 DIG 2 ;
                                                                                                 ITER { IF_NONE {} { CONS } } ;
                                                                                                 SWAP ;
                                                                                                 ITER { CONS } ;
                                                                                                 DIG 4 ;
                                                                                                 DIG 4 ;
                                                                                                 UPDATE 3 ;
                                                                                                 DIG 3 ;
                                                                                                 UPDATE 5 ;
                                                                                                 DIG 2 ;
                                                                                                 IF_NONE { SWAP } { DIG 2 ; SWAP ; CONS } ;
                                                                                                 PAIR } } } } } }
                                                                      { SWAP ;
                                                                        DUP ;
                                                                        DUG 2 ;
                                                                        GET 19 ;
                                                                        SENDER ;
                                                                        COMPARE ;
                                                                        NEQ ;
                                                                        IF { DROP 2 ; PUSH nat 232 ; FAILWITH }
                                                                           { UPDATE 23 ; NIL operation ; PAIR } } } } }
                                                          { IF_LEFT
                                                              { DROP ;
                                                                SENDER ;
                                                                SOURCE ;
                                                                COMPARE ;
                                                                NEQ ;
                                                                IF { DROP ; PUSH nat 228 ; FAILWITH }
                                                                   { DUP ;
                                                                     CAR ;
                                                                     IF { DROP ; PUSH nat 229 ; FAILWITH }
                                                                        { DUP ;
                                                                          GET 7 ;
                                                                          IF_LEFT
                                                                            { IF_LEFT
                                                                                { SELF_ADDRESS ;
                                                                                  SWAP ;
                                                                                  CONTRACT %getBalance (pair address (contract nat)) ;
                                                                                  IF_NONE { PUSH nat 225 ; FAILWITH } {} ;
                                                                                  SELF_ADDRESS ;
                                                                                  CONTRACT %fA12InternalA nat ;
                                                                                  IF_NONE { PUSH nat 223 ; FAILWITH } {} ;
                                                                                  SWAP ;
                                                                                  PUSH mutez 0 ;
                                                                                  DIG 2 ;
                                                                                  DIG 3 ;
                                                                                  PAIR ;
                                                                                  TRANSFER_TOKENS ;
                                                                                  SOME }
                                                                                { UNPAIR ;
                                                                                  SELF_ADDRESS ;
                                                                                  SWAP ;
                                                                                  CONTRACT %balance_of
                                                                                    (pair (list %requests (pair (address %owner) (nat %token_id)))
                                                                                          (contract %callback
                                                                                             (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) ;
                                                                                  IF_NONE { PUSH nat 224 ; FAILWITH } {} ;
                                                                                  SELF_ADDRESS ;
                                                                                  CONTRACT %fA2InternalA
                                                                                    (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) ;
                                                                                  IF_NONE { PUSH nat 222 ; FAILWITH } {} ;
                                                                                  SWAP ;
                                                                                  PUSH mutez 0 ;
                                                                                  DIG 2 ;
                                                                                  NIL (pair address nat) ;
                                                                                  DIG 5 ;
                                                                                  DIG 5 ;
                                                                                  PAIR ;
                                                                                  CONS ;
                                                                                  PAIR ;
                                                                                  TRANSFER_TOKENS ;
                                                                                  SOME } }
                                                                            { DROP ; NONE operation } ;
                                                                          SWAP ;
                                                                          DUP ;
                                                                          DUG 2 ;
                                                                          GET 7 ;
                                                                          IF_LEFT
                                                                            { IF_LEFT
                                                                                { SELF_ADDRESS ;
                                                                                  SWAP ;
                                                                                  CONTRACT %getBalance (pair address (contract nat)) ;
                                                                                  IF_NONE { PUSH nat 225 ; FAILWITH } {} ;
                                                                                  SELF_ADDRESS ;
                                                                                  CONTRACT %fA12InternalB nat ;
                                                                                  IF_NONE { PUSH nat 223 ; FAILWITH } {} ;
                                                                                  SWAP ;
                                                                                  PUSH mutez 0 ;
                                                                                  DIG 2 ;
                                                                                  DIG 3 ;
                                                                                  PAIR ;
                                                                                  TRANSFER_TOKENS ;
                                                                                  SOME }
                                                                                { UNPAIR ;
                                                                                  SELF_ADDRESS ;
                                                                                  SWAP ;
                                                                                  CONTRACT %balance_of
                                                                                    (pair (list %requests (pair (address %owner) (nat %token_id)))
                                                                                          (contract %callback
                                                                                             (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) ;
                                                                                  IF_NONE { PUSH nat 224 ; FAILWITH } {} ;
                                                                                  SELF_ADDRESS ;
                                                                                  CONTRACT %fA2InternalB
                                                                                    (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) ;
                                                                                  IF_NONE { PUSH nat 222 ; FAILWITH } {} ;
                                                                                  SWAP ;
                                                                                  PUSH mutez 0 ;
                                                                                  DIG 2 ;
                                                                                  NIL (pair address nat) ;
                                                                                  DIG 5 ;
                                                                                  DIG 5 ;
                                                                                  PAIR ;
                                                                                  CONS ;
                                                                                  PAIR ;
                                                                                  TRANSFER_TOKENS ;
                                                                                  SOME } }
                                                                            { DROP ; NONE operation } ;
                                                                          SELF_ADDRESS ;
                                                                          CONTRACT %updateTokenEnded unit ;
                                                                          IF_NONE
                                                                            { PUSH nat 227 ; FAILWITH }
                                                                            { PUSH mutez 0 ; UNIT ; TRANSFER_TOKENS } ;
                                                                          NIL operation ;
                                                                          SWAP ;
                                                                          CONS ;
                                                                          SWAP ;
                                                                          IF_NONE {} { CONS } ;
                                                                          DIG 2 ;
                                                                          PUSH bool True ;
                                                                          UPDATE 1 ;
                                                                          DIG 2 ;
                                                                          IF_NONE { SWAP } { DIG 2 ; SWAP ; CONS } ;
                                                                          PAIR } } }
                                                              { SWAP ;
                                                                DUP ;
                                                                DUG 2 ;
                                                                GET 7 ;
                                                                IF_LEFT
                                                                  { IF_LEFT {} { CAR } }
                                                                  { DROP ; PUSH string "no address" ; FAILWITH } ;
                                                                DUP 3 ;
                                                                GET 9 ;
                                                                IF_LEFT
                                                                  { IF_LEFT {} { CAR } }
                                                                  { DROP ; PUSH string "no adderess" ; FAILWITH } ;
                                                                DIG 2 ;
                                                                IF_LEFT
                                                                  { IF_LEFT
                                                                      { IF_LEFT
                                                                          { SWAP ;
                                                                            DROP ;
                                                                            SWAP ;
                                                                            SENDER ;
                                                                            COMPARE ;
                                                                            NEQ ;
                                                                            DUP 3 ;
                                                                            CAR ;
                                                                            NOT ;
                                                                            OR ;
                                                                            IF { PUSH nat 230 ; FAILWITH }
                                                                               { PUSH mutez 0 ;
                                                                                 AMOUNT ;
                                                                                 COMPARE ;
                                                                                 NEQ ;
                                                                                 IF { PUSH nat 231 ; FAILWITH } {} } ;
                                                                            UPDATE 3 }
                                                                          { DIG 2 ;
                                                                            DROP ;
                                                                            SWAP ;
                                                                            SENDER ;
                                                                            COMPARE ;
                                                                            NEQ ;
                                                                            DUP 3 ;
                                                                            CAR ;
                                                                            NOT ;
                                                                            OR ;
                                                                            IF { PUSH nat 230 ; FAILWITH }
                                                                               { PUSH mutez 0 ;
                                                                                 AMOUNT ;
                                                                                 COMPARE ;
                                                                                 NEQ ;
                                                                                 IF { PUSH nat 231 ; FAILWITH } {} } ;
                                                                            UPDATE 5 } }
                                                                      { IF_LEFT
                                                                          { SWAP ;
                                                                            DROP ;
                                                                            SWAP ;
                                                                            SENDER ;
                                                                            COMPARE ;
                                                                            NEQ ;
                                                                            DUP 3 ;
                                                                            CAR ;
                                                                            NOT ;
                                                                            OR ;
                                                                            IF { PUSH nat 230 ; FAILWITH }
                                                                               { PUSH mutez 0 ;
                                                                                 AMOUNT ;
                                                                                 COMPARE ;
                                                                                 NEQ ;
                                                                                 IF { PUSH nat 231 ; FAILWITH } {} } ;
                                                                            IF_CONS
                                                                              { CDR ; SWAP ; IF_CONS { DROP 3 ; PUSH nat 226 ; FAILWITH } {} }
                                                                              { PUSH nat 226 ; FAILWITH } ;
                                                                            UPDATE 3 }
                                                                          { DIG 2 ;
                                                                            DROP ;
                                                                            SWAP ;
                                                                            SENDER ;
                                                                            COMPARE ;
                                                                            NEQ ;
                                                                            DUP 3 ;
                                                                            CAR ;
                                                                            NOT ;
                                                                            OR ;
                                                                            IF { PUSH nat 230 ; FAILWITH }
                                                                               { PUSH mutez 0 ;
                                                                                 AMOUNT ;
                                                                                 COMPARE ;
                                                                                 NEQ ;
                                                                                 IF { PUSH nat 231 ; FAILWITH } {} } ;
                                                                            IF_CONS
                                                                              { CDR ; SWAP ; IF_CONS { DROP 3 ; PUSH nat 226 ; FAILWITH } {} }
                                                                              { PUSH nat 226 ; FAILWITH } ;
                                                                            UPDATE 5 } } }
                                                                  { DROP 3 ; PUSH bool False ; UPDATE 1 } ;
                                                                NIL operation ;
                                                                PAIR } } } ;
                                                 view "get_conversion"
                                                      (pair (bool %direction) (nat %input_amount))
                                                      nat
                                                      { UNPAIR ;
                                                        UNPAIR ;
                                                        IF { SWAP ; DUP ; DUG 2 ; GET 5 ; DUP 3 ; GET 3 ; PAIR }
                                                           { SWAP ; DUP ; DUG 2 ; GET 3 ; DUP 3 ; GET 5 ; PAIR } ;
                                                        UNPAIR ;
                                                        DIG 3 ;
                                                        GET 17 ;
                                                        IF_LEFT
                                                          { DROP ;
                                                            SWAP ;
                                                            DUP ;
                                                            DUG 2 ;
                                                            SWAP ;
                                                            DUP ;
                                                            DUG 2 ;
                                                            ADD ;
                                                            DUP 3 ;
                                                            DUP 3 ;
                                                            SUB ;
                                                            SWAP ;
                                                            DUP ;
                                                            DUP ;
                                                            DUG 3 ;
                                                            MUL ;
                                                            DUP ;
                                                            MUL ;
                                                            DUP ;
                                                            MUL ;
                                                            DIG 2 ;
                                                            SWAP ;
                                                            DUP ;
                                                            DUG 2 ;
                                                            EDIV ;
                                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                            CAR ;
                                                            DIG 2 ;
                                                            DUP ;
                                                            DUP ;
                                                            DUG 4 ;
                                                            MUL ;
                                                            DUP ;
                                                            MUL ;
                                                            DUP ;
                                                            MUL ;
                                                            PUSH int 0 ;
                                                            DUP 5 ;
                                                            COMPARE ;
                                                            EQ ;
                                                            IF { DIG 3 ; DROP ; PUSH int 0 }
                                                               { DIG 3 ;
                                                                 SWAP ;
                                                                 DUP ;
                                                                 DUG 2 ;
                                                                 EDIV ;
                                                                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                 CAR } ;
                                                            DIG 2 ;
                                                            ADD ;
                                                            ABS ;
                                                            PUSH nat 8 ;
                                                            MUL ;
                                                            SWAP ;
                                                            DIG 2 ;
                                                            SUB ;
                                                            ABS ;
                                                            SWAP ;
                                                            DROP ;
                                                            DUG 2 ;
                                                            PAIR ;
                                                            SWAP ;
                                                            PUSH int 5 ;
                                                            PAIR ;
                                                            PUSH nat 0 ;
                                                            DIG 3 ;
                                                            PAIR ;
                                                            PAIR ;
                                                            PAIR ;
                                                            LEFT nat ;
                                                            LOOP_LEFT
                                                              { PUSH int 0 ;
                                                                SWAP ;
                                                                DUP ;
                                                                DUG 2 ;
                                                                CAR ;
                                                                CDR ;
                                                                CAR ;
                                                                COMPARE ;
                                                                EQ ;
                                                                IF { CAR ; CAR ; CDR ; RIGHT (pair (pair (pair nat nat) (pair int nat)) (pair nat nat)) }
                                                                   { DUP ;
                                                                     CAR ;
                                                                     CAR ;
                                                                     CDR ;
                                                                     SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     CDR ;
                                                                     CDR ;
                                                                     SUB ;
                                                                     ABS ;
                                                                     SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     CAR ;
                                                                     CAR ;
                                                                     CAR ;
                                                                     DUP 3 ;
                                                                     CDR ;
                                                                     CAR ;
                                                                     ADD ;
                                                                     SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     ADD ;
                                                                     DUG 2 ;
                                                                     SUB ;
                                                                     SWAP ;
                                                                     DUP ;
                                                                     DUP ;
                                                                     DUG 3 ;
                                                                     MUL ;
                                                                     DUP ;
                                                                     MUL ;
                                                                     DUP ;
                                                                     MUL ;
                                                                     DIG 2 ;
                                                                     SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     EDIV ;
                                                                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                     CAR ;
                                                                     DIG 2 ;
                                                                     DUP ;
                                                                     DUP ;
                                                                     DUG 4 ;
                                                                     MUL ;
                                                                     DUP ;
                                                                     MUL ;
                                                                     DUP ;
                                                                     MUL ;
                                                                     PUSH int 0 ;
                                                                     DUP 5 ;
                                                                     COMPARE ;
                                                                     EQ ;
                                                                     IF { DIG 3 ; DROP ; PUSH int 0 }
                                                                        { DIG 3 ;
                                                                          SWAP ;
                                                                          DUP ;
                                                                          DUG 2 ;
                                                                          EDIV ;
                                                                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                          CAR } ;
                                                                     DIG 2 ;
                                                                     ADD ;
                                                                     ABS ;
                                                                     PUSH nat 8 ;
                                                                     MUL ;
                                                                     SWAP ;
                                                                     DIG 2 ;
                                                                     SUB ;
                                                                     ABS ;
                                                                     SWAP ;
                                                                     DUP 3 ;
                                                                     CAR ;
                                                                     CDR ;
                                                                     CDR ;
                                                                     DIG 2 ;
                                                                     SUB ;
                                                                     EDIV ;
                                                                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                     CAR ;
                                                                     ABS ;
                                                                     SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     CAR ;
                                                                     CAR ;
                                                                     CDR ;
                                                                     ADD ;
                                                                     SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     CDR ;
                                                                     DUP 3 ;
                                                                     CAR ;
                                                                     CDR ;
                                                                     DIG 2 ;
                                                                     DUP 4 ;
                                                                     CAR ;
                                                                     CAR ;
                                                                     CAR ;
                                                                     PAIR ;
                                                                     PAIR ;
                                                                     PAIR ;
                                                                     DUP ;
                                                                     CDR ;
                                                                     SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     CAR ;
                                                                     CDR ;
                                                                     CDR ;
                                                                     PUSH int 1 ;
                                                                     DIG 4 ;
                                                                     CAR ;
                                                                     CDR ;
                                                                     CAR ;
                                                                     SUB ;
                                                                     PAIR ;
                                                                     DIG 2 ;
                                                                     CAR ;
                                                                     CAR ;
                                                                     PAIR ;
                                                                     PAIR ;
                                                                     LEFT nat } } }
                                                          { DROP ;
                                                            DUP 3 ;
                                                            ADD ;
                                                            SWAP ;
                                                            DIG 2 ;
                                                            MUL ;
                                                            EDIV ;
                                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                            CAR } } } ;
                                             EMPTY_BIG_MAP string bytes ;
                                             DUP 10 ;
                                             GET 11 ;
                                             GET 3 ;
                                             PACK ;
                                             SOME ;
                                             PUSH string "version" ;
                                             UPDATE ;
                                             DUP 10 ;
                                             GET 11 ;
                                             CAR ;
                                             PACK ;
                                             SOME ;
                                             PUSH string "name" ;
                                             UPDATE ;
                                             NIL (pair string string) ;
                                             PUSH string "TZIP-021" ;
                                             PUSH string "TZIP-012" ;
                                             PAIR ;
                                             CONS ;
                                             PACK ;
                                             SOME ;
                                             PUSH string "interfaces" ;
                                             UPDATE ;
                                             DUP 10 ;
                                             GET 11 ;
                                             GET 5 ;
                                             PACK ;
                                             SOME ;
                                             PUSH string "homepage" ;
                                             UPDATE ;
                                             DUP 10 ;
                                             GET 11 ;
                                             GET 6 ;
                                             PACK ;
                                             SOME ;
                                             PUSH string "authors" ;
                                             UPDATE ;
                                             EMPTY_BIG_MAP nat (pair nat (map string bytes)) ;
                                             EMPTY_MAP string bytes ;
                                             DUP 12 ;
                                             GET 12 ;
                                             GET 8 ;
                                             PACK ;
                                             SOME ;
                                             PUSH string "thumbnailUri" ;
                                             UPDATE ;
                                             DUP 12 ;
                                             GET 12 ;
                                             GET 3 ;
                                             PACK ;
                                             SOME ;
                                             PUSH string "symbol" ;
                                             UPDATE ;
                                             DUP 12 ;
                                             GET 12 ;
                                             GET 7 ;
                                             PACK ;
                                             SOME ;
                                             PUSH string "shouldPreferSymbol" ;
                                             UPDATE ;
                                             DUP 12 ;
                                             GET 11 ;
                                             CAR ;
                                             PACK ;
                                             SOME ;
                                             PUSH string "name" ;
                                             UPDATE ;
                                             DUP 12 ;
                                             GET 12 ;
                                             GET 5 ;
                                             PACK ;
                                             SOME ;
                                             PUSH string "decimals" ;
                                             UPDATE ;
                                             DIG 11 ;
                                             GET 12 ;
                                             CAR ;
                                             PACK ;
                                             SOME ;
                                             PUSH string "" ;
                                             UPDATE ;
                                             PUSH nat 0 ;
                                             PAIR ;
                                             SOME ;
                                             PUSH nat 0 ;
                                             UPDATE ;
                                             SWAP ;
                                             DUP 5 ;
                                             DUP 5 ;
                                             DUP 13 ;
                                             GET 13 ;
                                             EMPTY_BIG_MAP address nat ;
                                             DIG 8 ;
                                             SOME ;
                                             SENDER ;
                                             UPDATE ;
                                             PAIR 6 ;
                                             PUSH mutez 0 ;
                                             NONE key_hash ;
                                             PAIR ;
                                             PAIR ;
                                             UNPPAIIR ;
                                             CREATE_CONTRACT
                                               { parameter
                                                   (or (or (or (pair %approve (address %spender) (nat %value))
                                                               (pair %getAllowance
                                                                  (pair %request (address %owner) (address %spender))
                                                                  (contract %callback nat)))
                                                           (or (pair %getBalance (address %owner) (contract %callback nat))
                                                               (pair %getTotalSupply (unit %request) (contract %callback nat))))
                                                       (or (pair %mintOrBurn (int %quantity) (address %target))
                                                           (pair %transfer (address %from) (address %to) (nat %value)))) ;
                                                 storage
                                                   (pair (big_map %tokens address nat)
                                                         (big_map %allowances (pair (address %owner) (address %spender)) nat)
                                                         (address %admin)
                                                         (nat %total_supply)
                                                         (big_map %metadata string bytes)
                                                         (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) ;
                                                 code { UNPAIR ;
                                                        PUSH mutez 0 ;
                                                        AMOUNT ;
                                                        COMPARE ;
                                                        NEQ ;
                                                        IF { DROP 2 ; PUSH string "DontSendTez" ; FAILWITH }
                                                           { IF_LEFT
                                                               { IF_LEFT
                                                                   { IF_LEFT
                                                                       { SWAP ;
                                                                         DUP ;
                                                                         DUG 2 ;
                                                                         GET 3 ;
                                                                         SWAP ;
                                                                         DUP ;
                                                                         DUG 2 ;
                                                                         CAR ;
                                                                         SENDER ;
                                                                         PAIR ;
                                                                         PUSH nat 0 ;
                                                                         DUP 4 ;
                                                                         CDR ;
                                                                         COMPARE ;
                                                                         GT ;
                                                                         PUSH nat 0 ;
                                                                         DUP 4 ;
                                                                         DUP 4 ;
                                                                         GET ;
                                                                         IF_NONE { PUSH nat 0 } {} ;
                                                                         COMPARE ;
                                                                         GT ;
                                                                         AND ;
                                                                         IF { PUSH string "UnsafeAllowanceChange" ; FAILWITH } {} ;
                                                                         DIG 3 ;
                                                                         DIG 2 ;
                                                                         DIG 3 ;
                                                                         CDR ;
                                                                         PUSH nat 0 ;
                                                                         SWAP ;
                                                                         DUP ;
                                                                         DUG 2 ;
                                                                         COMPARE ;
                                                                         EQ ;
                                                                         IF { DROP ; NONE nat } { SOME } ;
                                                                         DIG 3 ;
                                                                         UPDATE ;
                                                                         UPDATE 3 ;
                                                                         NIL operation ;
                                                                         PAIR }
                                                                       { SWAP ;
                                                                         DUP ;
                                                                         DUG 2 ;
                                                                         NIL operation ;
                                                                         DUP 3 ;
                                                                         CDR ;
                                                                         PUSH mutez 0 ;
                                                                         DIG 5 ;
                                                                         GET 3 ;
                                                                         DIG 5 ;
                                                                         CAR ;
                                                                         GET ;
                                                                         IF_NONE { PUSH nat 0 } {} ;
                                                                         TRANSFER_TOKENS ;
                                                                         CONS ;
                                                                         PAIR } }
                                                                   { IF_LEFT
                                                                       { SWAP ;
                                                                         DUP ;
                                                                         DUG 2 ;
                                                                         NIL operation ;
                                                                         DUP 3 ;
                                                                         CDR ;
                                                                         PUSH mutez 0 ;
                                                                         DIG 5 ;
                                                                         CAR ;
                                                                         DIG 5 ;
                                                                         CAR ;
                                                                         GET ;
                                                                         IF_NONE { PUSH nat 0 } {} ;
                                                                         TRANSFER_TOKENS ;
                                                                         CONS ;
                                                                         PAIR }
                                                                       { SWAP ;
                                                                         DUP ;
                                                                         DUG 2 ;
                                                                         NIL operation ;
                                                                         DIG 2 ;
                                                                         CDR ;
                                                                         PUSH mutez 0 ;
                                                                         DIG 4 ;
                                                                         GET 7 ;
                                                                         TRANSFER_TOKENS ;
                                                                         CONS ;
                                                                         PAIR } } }
                                                               { IF_LEFT
                                                                   { SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     GET 5 ;
                                                                     SENDER ;
                                                                     COMPARE ;
                                                                     NEQ ;
                                                                     IF { DROP 2 ; PUSH string "OnlyAdmin" ; FAILWITH }
                                                                        { DUP ;
                                                                          CAR ;
                                                                          DUP 3 ;
                                                                          CAR ;
                                                                          DUP 3 ;
                                                                          CDR ;
                                                                          GET ;
                                                                          IF_NONE { PUSH nat 0 } {} ;
                                                                          ADD ;
                                                                          ISNAT ;
                                                                          IF_NONE
                                                                            { PUSH string "Cannot burn more than the target's balance." ; FAILWITH }
                                                                            {} ;
                                                                          SWAP ;
                                                                          DUP ;
                                                                          DUG 2 ;
                                                                          CAR ;
                                                                          DUP 4 ;
                                                                          GET 7 ;
                                                                          ADD ;
                                                                          ABS ;
                                                                          DIG 3 ;
                                                                          DUP ;
                                                                          CAR ;
                                                                          PUSH nat 0 ;
                                                                          DUP 5 ;
                                                                          COMPARE ;
                                                                          EQ ;
                                                                          IF { DIG 3 ; DROP ; NONE nat } { DIG 3 ; SOME } ;
                                                                          DIG 4 ;
                                                                          CDR ;
                                                                          UPDATE ;
                                                                          UPDATE 1 ;
                                                                          SWAP ;
                                                                          UPDATE 7 ;
                                                                          NIL operation ;
                                                                          PAIR } }
                                                                   { SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     GET 3 ;
                                                                     DUP 3 ;
                                                                     CAR ;
                                                                     DUP 3 ;
                                                                     CAR ;
                                                                     SENDER ;
                                                                     COMPARE ;
                                                                     EQ ;
                                                                     IF { SWAP }
                                                                        { SENDER ;
                                                                          DUP 4 ;
                                                                          CAR ;
                                                                          PAIR ;
                                                                          DUP 4 ;
                                                                          GET 4 ;
                                                                          DUP 4 ;
                                                                          DUP 3 ;
                                                                          GET ;
                                                                          IF_NONE { PUSH nat 0 } {} ;
                                                                          SUB ;
                                                                          ISNAT ;
                                                                          IF_NONE { PUSH string "NotEnoughAllowance" ; FAILWITH } {} ;
                                                                          DIG 3 ;
                                                                          PUSH nat 0 ;
                                                                          DUP 3 ;
                                                                          COMPARE ;
                                                                          EQ ;
                                                                          IF { SWAP ; DROP ; NONE nat } { SWAP ; SOME } ;
                                                                          DIG 2 ;
                                                                          UPDATE } ;
                                                                     DUP 3 ;
                                                                     GET 4 ;
                                                                     DUP 3 ;
                                                                     DUP 5 ;
                                                                     CAR ;
                                                                     GET ;
                                                                     IF_NONE { PUSH nat 0 } {} ;
                                                                     SUB ;
                                                                     ISNAT ;
                                                                     IF_NONE { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
                                                                     DIG 2 ;
                                                                     PUSH nat 0 ;
                                                                     DUP 3 ;
                                                                     COMPARE ;
                                                                     EQ ;
                                                                     IF { SWAP ; DROP ; NONE nat } { SWAP ; SOME } ;
                                                                     DUP 4 ;
                                                                     CAR ;
                                                                     UPDATE ;
                                                                     DUP 3 ;
                                                                     GET 4 ;
                                                                     SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     DUP 5 ;
                                                                     GET 3 ;
                                                                     GET ;
                                                                     IF_NONE { PUSH nat 0 } {} ;
                                                                     ADD ;
                                                                     DIG 4 ;
                                                                     DIG 2 ;
                                                                     PUSH nat 0 ;
                                                                     DUP 4 ;
                                                                     COMPARE ;
                                                                     EQ ;
                                                                     IF { DIG 2 ; DROP ; NONE nat } { DIG 2 ; SOME } ;
                                                                     DIG 4 ;
                                                                     GET 3 ;
                                                                     UPDATE ;
                                                                     UPDATE 1 ;
                                                                     SWAP ;
                                                                     UPDATE 3 ;
                                                                     NIL operation ;
                                                                     PAIR } } } } ;
                                                 view "balance_of_view"
                                                      address
                                                      nat
                                                      { UNPAIR ; SWAP ; CAR ; SWAP ; GET ; IF_NONE { PUSH nat 0 } {} } } ;
                                             NIL operation ;
                                             DIG 3 ;
                                             CONS ;
                                             SWAP ;
                                             CONS ;
                                             DIG 8 ;
                                             DUP ;
                                             DUP ;
                                             DUG 10 ;
                                             GET 3 ;
                                             DUP 5 ;
                                             SOME ;
                                             DUP 12 ;
                                             GET 25 ;
                                             UPDATE ;
                                             UPDATE 3 ;
                                             DUP 10 ;
                                             CAR ;
                                             DUP 5 ;
                                             SOME ;
                                             DUP 9 ;
                                             DUP 11 ;
                                             PAIR ;
                                             UPDATE ;
                                             UPDATE 1 ;
                                             PUSH nat 1 ;
                                             DUP 11 ;
                                             GET 25 ;
                                             ADD ;
                                             UPDATE 25 ;
                                             DIG 5 ;
                                             DUP 5 ;
                                             SENDER ;
                                             DUP 10 ;
                                             PAIR 4 ;
                                             UNPAIR 4 ;
                                             PUSH nat 0 ;
                                             DUP 5 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DROP 4 ; NONE operation }
                                                { IF_LEFT
                                                    { IF_LEFT
                                                        { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                          IF_NONE { PUSH nat 105 ; FAILWITH } {} ;
                                                          PUSH mutez 0 ;
                                                          DIG 4 ;
                                                          DIG 4 ;
                                                          DIG 4 ;
                                                          PAIR 3 ;
                                                          TRANSFER_TOKENS ;
                                                          SOME }
                                                        { UNPAIR ;
                                                          CONTRACT %transfer
                                                            (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                          IF_NONE { PUSH nat 106 ; FAILWITH } {} ;
                                                          PUSH mutez 0 ;
                                                          NIL (pair address (list (pair address nat nat))) ;
                                                          NIL (pair address nat nat) ;
                                                          DIG 7 ;
                                                          DIG 5 ;
                                                          DIG 7 ;
                                                          PAIR 3 ;
                                                          CONS ;
                                                          DIG 4 ;
                                                          PAIR ;
                                                          CONS ;
                                                          TRANSFER_TOKENS ;
                                                          SOME } }
                                                    { DROP 4 ; NONE operation } } ;
                                             IF_NONE { SWAP } { DIG 2 ; SWAP ; CONS } ;
                                             DIG 4 ;
                                             DUP 5 ;
                                             SENDER ;
                                             DUP 8 ;
                                             PAIR 4 ;
                                             UNPAIR 4 ;
                                             PUSH nat 0 ;
                                             DUP 5 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DROP 4 ; NONE operation }
                                                { IF_LEFT
                                                    { IF_LEFT
                                                        { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                          IF_NONE { PUSH nat 105 ; FAILWITH } {} ;
                                                          PUSH mutez 0 ;
                                                          DIG 4 ;
                                                          DIG 4 ;
                                                          DIG 4 ;
                                                          PAIR 3 ;
                                                          TRANSFER_TOKENS ;
                                                          SOME }
                                                        { UNPAIR ;
                                                          CONTRACT %transfer
                                                            (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                          IF_NONE { PUSH nat 106 ; FAILWITH } {} ;
                                                          PUSH mutez 0 ;
                                                          NIL (pair address (list (pair address nat nat))) ;
                                                          NIL (pair address nat nat) ;
                                                          DIG 7 ;
                                                          DIG 5 ;
                                                          DIG 7 ;
                                                          PAIR 3 ;
                                                          CONS ;
                                                          DIG 4 ;
                                                          PAIR ;
                                                          CONS ;
                                                          TRANSFER_TOKENS ;
                                                          SOME } }
                                                    { DROP 4 ; NONE operation } } ;
                                             SELF_ADDRESS ;
                                             CONTRACT %setLqtAddress (pair (address %dex_address) (address %lqt_address)) ;
                                             IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                             PUSH mutez 0 ;
                                             DIG 5 ;
                                             DUP 7 ;
                                             PAIR ;
                                             TRANSFER_TOKENS ;
                                             SELF_ADDRESS ;
                                             CONTRACT %setBaker
                                               (pair (option %baker key_hash) (address %dex_address) (bool %freeze_baker)) ;
                                             IF_NONE { PUSH nat 121 ; FAILWITH } {} ;
                                             DUP 7 ;
                                             DUP 9 ;
                                             IF_LEFT
                                               { IF_LEFT
                                                   { DROP ;
                                                     IF_LEFT
                                                       { DIG 10 ;
                                                         DROP ;
                                                         IF_LEFT
                                                           { DROP ; NONE key_hash ; PUSH bool True ; PAIR }
                                                           { DROP ; NONE key_hash ; PUSH bool True ; PAIR } }
                                                       { DROP ; DIG 9 ; GET 17 ; SOME ; PUSH bool False ; PAIR } }
                                                   { DROP ;
                                                     IF_LEFT
                                                       { DIG 10 ;
                                                         DROP ;
                                                         IF_LEFT
                                                           { DROP ; NONE key_hash ; PUSH bool True ; PAIR }
                                                           { DROP ; NONE key_hash ; PUSH bool True ; PAIR } }
                                                       { DROP ; DIG 9 ; GET 17 ; SOME ; PUSH bool False ; PAIR } } }
                                               { DROP 2 ; DIG 9 ; GET 17 ; SOME ; PUSH bool False ; PAIR } ;
                                             UNPAIR ;
                                             DIG 2 ;
                                             PUSH mutez 0 ;
                                             DIG 2 ;
                                             DUP 9 ;
                                             DIG 4 ;
                                             PAIR 3 ;
                                             TRANSFER_TOKENS ;
                                             DIG 8 ;
                                             CONTRACT %addExchange
                                               (pair (address %dex_address)
                                                     (or %token_a (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                                     (or %token_b (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))) ;
                                             IF_NONE { PUSH nat 124 ; FAILWITH } {} ;
                                             PUSH mutez 0 ;
                                             DIG 8 ;
                                             DIG 9 ;
                                             DIG 9 ;
                                             PAIR 3 ;
                                             TRANSFER_TOKENS ;
                                             NIL operation ;
                                             DIG 4 ;
                                             IF_NONE { DIG 4 } { DIG 5 ; SWAP ; CONS } ;
                                             DIG 4 ;
                                             CONS ;
                                             DIG 3 ;
                                             CONS ;
                                             DIG 2 ;
                                             CONS ;
                                             ITER { CONS } ;
                                             PAIR } } } } }
                       { DROP ;
                         DUP ;
                         GET 26 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { SELF_ADDRESS ;
                              SWAP ;
                              DUP ;
                              GET 26 ;
                              CONTRACT %callMultisig
                                (pair (pair %entrypoint_signature
                                         (pair (string %name) (bytes %params))
                                         (address %source_contract))
                                      (lambda %callback unit (list operation))) ;
                              IF_NONE
                                { SWAP ; DROP ; PUSH string "no call entrypoint" ; FAILWITH }
                                { SELF_ADDRESS ;
                                  UNIT ;
                                  PACK ;
                                  SHA256 ;
                                  PUSH string "launchSink" ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  PUSH mutez 0 ;
                                  DIG 4 ;
                                  LAMBDA
                                    (pair address unit)
                                    (list operation)
                                    { CAR ;
                                      CONTRACT %launchSink unit ;
                                      IF_NONE
                                        { PUSH string "no launchSink entrypoint" ; FAILWITH }
                                        { NIL operation ; SWAP ; PUSH mutez 0 ; UNIT ; TRANSFER_TOKENS ; CONS } } ;
                                  SWAP ;
                                  APPLY ;
                                  DIG 3 ;
                                  PAIR ;
                                  TRANSFER_TOKENS ;
                                  NIL operation ;
                                  SWAP ;
                                  CONS } ;
                              PAIR }
                            { DUP ;
                              GET 9 ;
                              IF_NONE
                                { DUP ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  GET 21 ;
                                  DUP 3 ;
                                  GET 7 ;
                                  EMPTY_BIG_MAP (or (or address (pair address nat)) unit) nat ;
                                  EMPTY_BIG_MAP (or (or address (pair address nat)) unit) nat ;
                                  SELF_ADDRESS ;
                                  DUP 7 ;
                                  GET 5 ;
                                  PAIR 7 ;
                                  PUSH mutez 0 ;
                                  NONE key_hash ;
                                  PAIR ;
                                  PAIR ;
                                  UNPPAIIR ;
                                  CREATE_CONTRACT
                                    { parameter
                                        (or (or (or (pair %addExchange
                                                       (address %dex_address)
                                                       (or %token_a (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                                       (or %token_b (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)))
                                                    (pair %claim
                                                       (list %tokens (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)))
                                                       (timestamp %deadline)
                                                       (address %reward_to)))
                                                (or (pair %deposit
                                                       (or %token_to_deposit (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                                       (or %reference_token (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                                       (nat %burn_amount)
                                                       (nat %reserve_amount)
                                                       (bool %direction))
                                                    (pair %removeExchange
                                                       (address %dex_address)
                                                       (or %token_a (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                                       (or %token_b (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)))))
                                            (nat %updateClaimLimit)) ;
                                      storage
                                        (pair (or %token_type_smak (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                              (address %factory_address)
                                              (big_map %burn (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)) nat)
                                              (big_map %reserve (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)) nat)
                                              (address %reserve_address)
                                              (nat %token_claim_limit)
                                              (big_map %exchanges
                                                 (pair (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                                       (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)))
                                                 address)) ;
                                      code { UNPAIR ;
                                             IF_LEFT
                                               { IF_LEFT
                                                   { IF_LEFT
                                                       { SWAP ;
                                                         DUP ;
                                                         DUG 2 ;
                                                         GET 3 ;
                                                         SENDER ;
                                                         COMPARE ;
                                                         NEQ ;
                                                         IF { DROP 2 ; PUSH nat 319 ; FAILWITH }
                                                            { UNPAIR 3 ;
                                                              NIL operation ;
                                                              DUP 3 ;
                                                              IF_LEFT
                                                                { IF_LEFT
                                                                    { DROP }
                                                                    { UNPAIR ;
                                                                      NIL (or (pair address address nat) (pair address address nat)) ;
                                                                      DIG 2 ;
                                                                      DUP 5 ;
                                                                      SELF_ADDRESS ;
                                                                      PAIR 3 ;
                                                                      LEFT (pair address address nat) ;
                                                                      CONS ;
                                                                      DUG 2 ;
                                                                      CONTRACT %update_operators
                                                                        (list (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                                                                  (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))) ;
                                                                      IF_NONE { PUSH nat 304 ; FAILWITH } {} ;
                                                                      PUSH mutez 0 ;
                                                                      DIG 3 ;
                                                                      TRANSFER_TOKENS ;
                                                                      CONS } }
                                                                { DROP } ;
                                                              DUP 4 ;
                                                              IF_LEFT
                                                                { IF_LEFT
                                                                    { DROP }
                                                                    { UNPAIR ;
                                                                      NIL (or (pair address address nat) (pair address address nat)) ;
                                                                      DIG 2 ;
                                                                      DUP 5 ;
                                                                      SELF_ADDRESS ;
                                                                      PAIR 3 ;
                                                                      LEFT (pair address address nat) ;
                                                                      CONS ;
                                                                      DUG 2 ;
                                                                      CONTRACT %update_operators
                                                                        (list (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                                                                  (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))) ;
                                                                      IF_NONE { PUSH nat 304 ; FAILWITH } {} ;
                                                                      PUSH mutez 0 ;
                                                                      DIG 3 ;
                                                                      TRANSFER_TOKENS ;
                                                                      CONS } }
                                                                { DROP } ;
                                                              DIG 4 ;
                                                              DUP ;
                                                              GET 12 ;
                                                              DIG 3 ;
                                                              SOME ;
                                                              DIG 5 ;
                                                              DIG 5 ;
                                                              PAIR ;
                                                              UPDATE ;
                                                              UPDATE 12 ;
                                                              SWAP ;
                                                              PAIR } }
                                                       { UNPAIR 3 ;
                                                         PUSH nat 0 ;
                                                         SWAP ;
                                                         DUP ;
                                                         DUG 2 ;
                                                         SIZE ;
                                                         COMPARE ;
                                                         EQ ;
                                                         IF { DROP 4 ; PUSH nat 324 ; FAILWITH }
                                                            { DUP 4 ;
                                                              GET 11 ;
                                                              SWAP ;
                                                              DUP ;
                                                              DUG 2 ;
                                                              SIZE ;
                                                              COMPARE ;
                                                              GE ;
                                                              IF { DROP 4 ; PUSH nat 317 ; FAILWITH }
                                                                 { NIL operation ;
                                                                   SWAP ;
                                                                   ITER { SWAP ;
                                                                          DUP 5 ;
                                                                          GET 12 ;
                                                                          DUP 6 ;
                                                                          CAR ;
                                                                          DUP 4 ;
                                                                          PAIR ;
                                                                          GET ;
                                                                          IF_NONE
                                                                            { DUP 5 ;
                                                                              GET 12 ;
                                                                              DUP 3 ;
                                                                              DUP 7 ;
                                                                              CAR ;
                                                                              PAIR ;
                                                                              GET ;
                                                                              IF_NONE { PUSH nat 320 ; FAILWITH } { PUSH bool False ; SWAP ; PAIR } }
                                                                            { PUSH bool True ; SWAP ; PAIR } ;
                                                                          UNPAIR ;
                                                                          DUP 7 ;
                                                                          GET 5 ;
                                                                          DUP 5 ;
                                                                          GET ;
                                                                          IF_NONE { PUSH nat 313 ; FAILWITH } {} ;
                                                                          DUP 8 ;
                                                                          GET 7 ;
                                                                          DUP 6 ;
                                                                          GET ;
                                                                          IF_NONE { PUSH nat 314 ; FAILWITH } {} ;
                                                                          DUP ;
                                                                          DUP 10 ;
                                                                          GET 9 ;
                                                                          SELF_ADDRESS ;
                                                                          DUP 9 ;
                                                                          PAIR 4 ;
                                                                          UNPAIR 4 ;
                                                                          PUSH nat 0 ;
                                                                          DUP 5 ;
                                                                          COMPARE ;
                                                                          EQ ;
                                                                          IF { DROP 4 ; NONE operation }
                                                                             { IF_LEFT
                                                                                 { IF_LEFT
                                                                                     { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                                                       IF_NONE { PUSH nat 306 ; FAILWITH } {} ;
                                                                                       PUSH mutez 0 ;
                                                                                       DIG 4 ;
                                                                                       DIG 4 ;
                                                                                       DIG 4 ;
                                                                                       PAIR 3 ;
                                                                                       TRANSFER_TOKENS ;
                                                                                       SOME }
                                                                                     { UNPAIR ;
                                                                                       CONTRACT %transfer
                                                                                         (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                                                       IF_NONE { PUSH nat 307 ; FAILWITH } {} ;
                                                                                       PUSH mutez 0 ;
                                                                                       NIL (pair address (list (pair address nat nat))) ;
                                                                                       NIL (pair address nat nat) ;
                                                                                       DIG 7 ;
                                                                                       DIG 5 ;
                                                                                       DIG 7 ;
                                                                                       PAIR 3 ;
                                                                                       CONS ;
                                                                                       DIG 4 ;
                                                                                       PAIR ;
                                                                                       CONS ;
                                                                                       TRANSFER_TOKENS ;
                                                                                       SOME } }
                                                                                 { DROP 2 ;
                                                                                   SELF_ADDRESS ;
                                                                                   SWAP ;
                                                                                   DUP ;
                                                                                   DUG 2 ;
                                                                                   COMPARE ;
                                                                                   EQ ;
                                                                                   IF { DROP 2 ; NONE operation }
                                                                                      { CONTRACT unit ;
                                                                                        IF_NONE { PUSH nat 308 ; FAILWITH } {} ;
                                                                                        PUSH mutez 1 ;
                                                                                        DIG 2 ;
                                                                                        MUL ;
                                                                                        UNIT ;
                                                                                        TRANSFER_TOKENS ;
                                                                                        SOME } } } ;
                                                                          IF_NONE { DIG 4 } { DIG 5 ; SWAP ; CONS } ;
                                                                          UNIT ;
                                                                          RIGHT (or address (pair address nat)) ;
                                                                          DUP 7 ;
                                                                          COMPARE ;
                                                                          EQ ;
                                                                          IF { PUSH mutez 1 ; DUP 4 ; MUL } { PUSH mutez 0 } ;
                                                                          DUP 5 ;
                                                                          CONTRACT %swap
                                                                            (pair (address %t2t_to)
                                                                                  (nat %tokens_sold)
                                                                                  (nat %min_tokens_bought)
                                                                                  (bool %a_to_b)
                                                                                  (timestamp %deadline)) ;
                                                                          IF_NONE { PUSH nat 300 ; FAILWITH } {} ;
                                                                          SWAP ;
                                                                          DUP 9 ;
                                                                          DIG 7 ;
                                                                          PUSH nat 0 ;
                                                                          DUP 8 ;
                                                                          DUP 13 ;
                                                                          PAIR 5 ;
                                                                          TRANSFER_TOKENS ;
                                                                          PUSH nat 0 ;
                                                                          DUP 5 ;
                                                                          COMPARE ;
                                                                          NEQ ;
                                                                          IF { CONS } { DROP } ;
                                                                          PUSH nat 0 ;
                                                                          DUP 3 ;
                                                                          DUP 5 ;
                                                                          ADD ;
                                                                          COMPARE ;
                                                                          NEQ ;
                                                                          IF { DIG 4 ;
                                                                               IF_LEFT
                                                                                 { IF_LEFT
                                                                                     { SWAP ;
                                                                                       DIG 2 ;
                                                                                       DIG 3 ;
                                                                                       ADD ;
                                                                                       DIG 3 ;
                                                                                       DIG 3 ;
                                                                                       PAIR 3 ;
                                                                                       UNPAIR 3 ;
                                                                                       CONTRACT %approve (pair address nat) ;
                                                                                       IF_NONE { PUSH nat 305 ; FAILWITH } {} ;
                                                                                       PUSH mutez 0 ;
                                                                                       DIG 3 ;
                                                                                       DIG 3 ;
                                                                                       PAIR ;
                                                                                       TRANSFER_TOKENS ;
                                                                                       CONS }
                                                                                     { DIG 2 ; DIG 3 ; DIG 4 ; DROP 4 } }
                                                                                 { DIG 2 ; DIG 3 ; DIG 4 ; DROP 4 } }
                                                                             { SWAP ; DIG 2 ; DIG 3 ; DIG 4 ; DROP 4 } } ;
                                                                   SWAP ;
                                                                   DIG 2 ;
                                                                   DROP 2 ;
                                                                   PAIR } } } }
                                                   { IF_LEFT
                                                       { UNPAIR 5 ;
                                                         DIG 4 ;
                                                         IF { DUP 5 ;
                                                              GET 12 ;
                                                              DUG 2 ;
                                                              DUP ;
                                                              DUG 3 ;
                                                              PAIR ;
                                                              GET ;
                                                              IF_NONE { PUSH nat 321 ; FAILWITH } {} }
                                                            { DUP 5 ;
                                                              GET 12 ;
                                                              SWAP ;
                                                              DUP ;
                                                              DUG 2 ;
                                                              DIG 3 ;
                                                              PAIR ;
                                                              GET ;
                                                              IF_NONE { PUSH nat 321 ; FAILWITH } {} } ;
                                                         SENDER ;
                                                         COMPARE ;
                                                         NEQ ;
                                                         IF { DROP 4 ; PUSH nat 323 ; FAILWITH }
                                                            { DUP 4 ;
                                                              GET 5 ;
                                                              SWAP ;
                                                              DUP ;
                                                              DUG 2 ;
                                                              GET ;
                                                              IF_NONE
                                                                { DUP 4 ; GET 5 ; DIG 2 ; SOME ; DUP 3 ; UPDATE }
                                                                { DUP 5 ; GET 5 ; DIG 3 ; DIG 2 ; ADD ; SOME ; DUP 3 ; UPDATE } ;
                                                              DUP 4 ;
                                                              GET 7 ;
                                                              DUP 3 ;
                                                              GET ;
                                                              IF_NONE
                                                                { DUP 4 ; GET 7 ; DIG 3 ; SOME ; DIG 3 ; UPDATE }
                                                                { DUP 5 ; GET 7 ; DIG 4 ; DIG 2 ; ADD ; SOME ; DIG 3 ; UPDATE } ;
                                                              DUG 2 ;
                                                              UPDATE 5 ;
                                                              SWAP ;
                                                              UPDATE 7 ;
                                                              NIL operation ;
                                                              PAIR } }
                                                       { UNPAIR 3 ;
                                                         DUP 4 ;
                                                         GET 12 ;
                                                         DUP 4 ;
                                                         DUP 4 ;
                                                         PAIR ;
                                                         GET ;
                                                         IF_NONE
                                                           { DROP 4 ; PUSH nat 325 ; FAILWITH }
                                                           { COMPARE ;
                                                             NEQ ;
                                                             IF { DROP 3 ; PUSH nat 327 ; FAILWITH }
                                                                { DIG 2 ;
                                                                  DUP ;
                                                                  GET 12 ;
                                                                  NONE address ;
                                                                  DIG 4 ;
                                                                  DIG 4 ;
                                                                  PAIR ;
                                                                  UPDATE ;
                                                                  UPDATE 12 ;
                                                                  NIL operation ;
                                                                  PAIR } } } } }
                                               { SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 GET 3 ;
                                                 SENDER ;
                                                 COMPARE ;
                                                 NEQ ;
                                                 IF { DROP 2 ; PUSH nat 318 ; FAILWITH }
                                                    { UPDATE 11 ; NIL operation ; PAIR } } } } ;
                                  DUG 2 ;
                                  SOME ;
                                  UPDATE 9 ;
                                  NIL operation ;
                                  DIG 2 ;
                                  CONS ;
                                  PAIR }
                                { DROP 2 ; PUSH nat 112 ; FAILWITH } } } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 26 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { SELF_ADDRESS ;
                              DIG 2 ;
                              DUP ;
                              GET 26 ;
                              CONTRACT %callMultisig
                                (pair (pair %entrypoint_signature
                                         (pair (string %name) (bytes %params))
                                         (address %source_contract))
                                      (lambda %callback unit (list operation))) ;
                              IF_NONE
                                { SWAP ; DIG 2 ; DROP 2 ; PUSH string "no call entrypoint" ; FAILWITH }
                                { SELF_ADDRESS ;
                                  DUP 5 ;
                                  PACK ;
                                  SHA256 ;
                                  PUSH string "removeExchange" ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  PUSH mutez 0 ;
                                  DIG 5 ;
                                  DIG 5 ;
                                  PAIR ;
                                  LAMBDA
                                    (pair (pair address
                                                (pair nat
                                                      (or (or address (pair address nat)) unit)
                                                      (or (or address (pair address nat)) unit)))
                                          unit)
                                    (list operation)
                                    { CAR ;
                                      UNPAIR ;
                                      CONTRACT %removeExchange
                                        (pair (nat %index)
                                              (or %token_a (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                              (or %token_b (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))) ;
                                      IF_NONE
                                        { DROP ; PUSH string "no removeExchange entrypoint" ; FAILWITH }
                                        { NIL operation ; SWAP ; PUSH mutez 0 ; DIG 3 ; TRANSFER_TOKENS ; CONS } } ;
                                  SWAP ;
                                  APPLY ;
                                  DIG 3 ;
                                  PAIR ;
                                  TRANSFER_TOKENS ;
                                  NIL operation ;
                                  SWAP ;
                                  CONS } ;
                              PAIR }
                            { UNPAIR 3 ;
                              DUP 4 ;
                              CAR ;
                              DUP 4 ;
                              DUP 4 ;
                              PAIR ;
                              GET ;
                              IF_NONE
                                { DUP 4 ;
                                  CAR ;
                                  DUP 3 ;
                                  DUP 5 ;
                                  PAIR ;
                                  GET ;
                                  IF_NONE { PUSH nat 136 ; FAILWITH } {} ;
                                  DUP 3 ;
                                  DUP 5 ;
                                  PAIR ;
                                  SWAP ;
                                  DUP 6 ;
                                  CAR ;
                                  NONE address ;
                                  DIG 5 ;
                                  DIG 6 ;
                                  PAIR ;
                                  UPDATE ;
                                  PAIR ;
                                  PAIR }
                                { DUP 4 ;
                                  DUP 4 ;
                                  PAIR ;
                                  SWAP ;
                                  DUP 6 ;
                                  CAR ;
                                  NONE address ;
                                  DIG 6 ;
                                  DIG 6 ;
                                  PAIR ;
                                  UPDATE ;
                                  PAIR ;
                                  PAIR } ;
                              UNPAIR ;
                              UNPAIR ;
                              DUP 5 ;
                              GET 3 ;
                              DUP 5 ;
                              GET ;
                              IF_NONE
                                { DIG 3 ; DROP ; PUSH nat 137 ; FAILWITH }
                                { DUP 3 ;
                                  SWAP ;
                                  COMPARE ;
                                  NEQ ;
                                  IF { DIG 3 ; DROP ; PUSH nat 138 ; FAILWITH }
                                     { DUP 5 ; GET 3 ; NONE address ; DIG 5 ; UPDATE } } ;
                              DUP 5 ;
                              GET 9 ;
                              IF_NONE { PUSH nat 104 ; FAILWITH } {} ;
                              CONTRACT %removeExchange
                                (pair (address %dex_address)
                                      (or %token_a (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                                      (or %token_b (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))) ;
                              IF_NONE { PUSH nat 139 ; FAILWITH } {} ;
                              NIL operation ;
                              SWAP ;
                              PUSH mutez 0 ;
                              DUP 7 ;
                              CDR ;
                              DIG 7 ;
                              CAR ;
                              DIG 7 ;
                              PAIR 3 ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              DIG 3 ;
                              DIG 3 ;
                              UPDATE 1 ;
                              DIG 2 ;
                              UPDATE 3 ;
                              SWAP ;
                              PAIR } }
                       { SELF_ADDRESS ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 2 ; PUSH nat 119 ; FAILWITH }
                            { DUP ;
                              GET 3 ;
                              CONTRACT %setBaker (pair (option %baker key_hash) (bool %freeze_baker)) ;
                              IF_NONE { PUSH nat 120 ; FAILWITH } {} ;
                              DIG 2 ;
                              NIL operation ;
                              DIG 2 ;
                              PUSH mutez 0 ;
                              DUP 5 ;
                              GET 4 ;
                              DIG 5 ;
                              CAR ;
                              PAIR ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              PAIR } } } }
               { IF_LEFT
                   { IF_LEFT
                       { SELF_ADDRESS ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 2 ; PUSH nat 109 ; FAILWITH }
                            { DUP ;
                              CAR ;
                              CONTRACT %setLqtAddress address ;
                              IF_NONE { PUSH nat 110 ; FAILWITH } {} ;
                              PUSH mutez 0 ;
                              DIG 2 ;
                              CDR ;
                              TRANSFER_TOKENS ;
                              SWAP ;
                              NIL operation ;
                              DIG 2 ;
                              CONS ;
                              PAIR } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 26 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { SELF_ADDRESS ;
                              DIG 2 ;
                              DUP ;
                              GET 26 ;
                              CONTRACT %callMultisig
                                (pair (pair %entrypoint_signature
                                         (pair (string %name) (bytes %params))
                                         (address %source_contract))
                                      (lambda %callback unit (list operation))) ;
                              IF_NONE
                                { SWAP ; DIG 2 ; DROP 2 ; PUSH string "no call entrypoint" ; FAILWITH }
                                { SELF_ADDRESS ;
                                  DUP 5 ;
                                  PACK ;
                                  SHA256 ;
                                  PUSH string "setClaimLimit" ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  PUSH mutez 0 ;
                                  DIG 5 ;
                                  DIG 5 ;
                                  PAIR ;
                                  LAMBDA
                                    (pair (pair address nat) unit)
                                    (list operation)
                                    { CAR ;
                                      UNPAIR ;
                                      CONTRACT %setClaimLimit nat ;
                                      IF_NONE
                                        { DROP ; PUSH string "no setClaimLimit entrypoint" ; FAILWITH }
                                        { NIL operation ; SWAP ; PUSH mutez 0 ; DIG 3 ; TRANSFER_TOKENS ; CONS } } ;
                                  SWAP ;
                                  APPLY ;
                                  DIG 3 ;
                                  PAIR ;
                                  TRANSFER_TOKENS ;
                                  NIL operation ;
                                  SWAP ;
                                  CONS } ;
                              PAIR }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 9 ;
                              IF_NONE { PUSH nat 104 ; FAILWITH } {} ;
                              CONTRACT %updateClaimLimit nat ;
                              IF_NONE { PUSH nat 126 ; FAILWITH } {} ;
                              PUSH mutez 0 ;
                              DUP 3 ;
                              TRANSFER_TOKENS ;
                              DUG 2 ;
                              UPDATE 21 ;
                              NIL operation ;
                              DIG 2 ;
                              CONS ;
                              PAIR } } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 26 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { SELF_ADDRESS ;
                              DIG 2 ;
                              DUP ;
                              GET 26 ;
                              CONTRACT %callMultisig
                                (pair (pair %entrypoint_signature
                                         (pair (string %name) (bytes %params))
                                         (address %source_contract))
                                      (lambda %callback unit (list operation))) ;
                              IF_NONE
                                { SWAP ; DIG 2 ; DROP 2 ; PUSH string "no call entrypoint" ; FAILWITH }
                                { SELF_ADDRESS ;
                                  DUP 5 ;
                                  PACK ;
                                  SHA256 ;
                                  PUSH string "updateBaker" ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  PUSH mutez 0 ;
                                  DIG 5 ;
                                  DIG 5 ;
                                  PAIR ;
                                  LAMBDA
                                    (pair (pair address (pair key_hash nat nat)) unit)
                                    (list operation)
                                    { CAR ;
                                      UNPAIR ;
                                      CONTRACT %updateBaker
                                        (pair (key_hash %baker) (nat %first_pool) (nat %number_of_pools)) ;
                                      IF_NONE
                                        { DROP ; PUSH string "no updateBaker entrypoint" ; FAILWITH }
                                        { NIL operation ; SWAP ; PUSH mutez 0 ; DIG 3 ; TRANSFER_TOKENS ; CONS } } ;
                                  SWAP ;
                                  APPLY ;
                                  DIG 3 ;
                                  PAIR ;
                                  TRANSFER_TOKENS ;
                                  NIL operation ;
                                  SWAP ;
                                  CONS } ;
                              PAIR }
                            { UNPAIR 3 ;
                              DUP 4 ;
                              GET 25 ;
                              DUP 4 ;
                              DUP 4 ;
                              ADD ;
                              COMPARE ;
                              GT ;
                              IF { DIG 2 ; DROP ; DUP 3 ; GET 25 } { DUG 2 ; DUP ; DUG 3 ; ADD } ;
                              DUP 4 ;
                              NIL operation ;
                              DUP 4 ;
                              DIG 3 ;
                              DIG 5 ;
                              PAIR 5 ;
                              LEFT (list operation) ;
                              LOOP_LEFT
                                { UNPAIR 5 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { SWAP ;
                                       DIG 2 ;
                                       DIG 4 ;
                                       DROP 4 ;
                                       RIGHT
                                         (pair nat
                                               nat
                                               key_hash
                                               (list operation)
                                               (pair (big_map
                                                        (pair (or (or address (pair address nat)) unit) (or (or address (pair address nat)) unit))
                                                        address)
                                                     (big_map nat address)
                                                     (or (or address (pair address nat)) unit)
                                                     address
                                                     (option address)
                                                     (big_map string bytes)
                                                     (big_map (pair address address) nat)
                                                     (big_map nat (pair nat (map string bytes)))
                                                     key_hash
                                                     nat
                                                     nat
                                                     (big_map address (pair nat nat))
                                                     nat
                                                     address)) }
                                     { DUP 5 ;
                                       GET 3 ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       GET ;
                                       IF_NONE { PUSH string "no pool" ; FAILWITH } {} ;
                                       CONTRACT %setBaker (pair (option %baker key_hash) (bool %freeze_baker)) ;
                                       IF_NONE { PUSH string "no setBaker entrypoint" ; FAILWITH } {} ;
                                       DIG 4 ;
                                       SWAP ;
                                       PUSH mutez 0 ;
                                       PUSH bool False ;
                                       DUP 7 ;
                                       SOME ;
                                       PAIR ;
                                       TRANSFER_TOKENS ;
                                       CONS ;
                                       PUSH nat 1 ;
                                       DIG 2 ;
                                       ADD ;
                                       DIG 4 ;
                                       DIG 2 ;
                                       DIG 4 ;
                                       DIG 4 ;
                                       DIG 4 ;
                                       PAIR 5 ;
                                       LEFT (list operation) } } ;
                              DUG 2 ;
                              UPDATE 17 ;
                              SWAP ;
                              PAIR } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 26 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { SELF_ADDRESS ;
                              DIG 2 ;
                              DUP ;
                              GET 26 ;
                              CONTRACT %callMultisig
                                (pair (pair %entrypoint_signature
                                         (pair (string %name) (bytes %params))
                                         (address %source_contract))
                                      (lambda %callback unit (list operation))) ;
                              IF_NONE
                                { SWAP ; DIG 2 ; DROP 2 ; PUSH string "no call entrypoint" ; FAILWITH }
                                { SELF_ADDRESS ;
                                  DUP 5 ;
                                  PACK ;
                                  SHA256 ;
                                  PUSH string "updateMultisig" ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  PUSH mutez 0 ;
                                  DIG 5 ;
                                  DIG 5 ;
                                  PAIR ;
                                  LAMBDA
                                    (pair (pair address address) unit)
                                    (list operation)
                                    { CAR ;
                                      UNPAIR ;
                                      CONTRACT %updateMultisig address ;
                                      IF_NONE
                                        { DROP ; PUSH string "no updateMultisig entrypoint" ; FAILWITH }
                                        { NIL operation ; SWAP ; PUSH mutez 0 ; DIG 3 ; TRANSFER_TOKENS ; CONS } } ;
                                  SWAP ;
                                  APPLY ;
                                  DIG 3 ;
                                  PAIR ;
                                  TRANSFER_TOKENS ;
                                  NIL operation ;
                                  SWAP ;
                                  CONS } ;
                              PAIR }
                            { UPDATE 26 ; NIL operation ; PAIR } } } } }
           { SWAP ;
             DUP ;
             DUG 2 ;
             GET 26 ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { SELF_ADDRESS ;
                  DIG 2 ;
                  DUP ;
                  GET 26 ;
                  CONTRACT %callMultisig
                    (pair (pair %entrypoint_signature
                             (pair (string %name) (bytes %params))
                             (address %source_contract))
                          (lambda %callback unit (list operation))) ;
                  IF_NONE
                    { SWAP ; DIG 2 ; DROP 2 ; PUSH string "no call entrypoint" ; FAILWITH }
                    { SELF_ADDRESS ;
                      DUP 5 ;
                      PACK ;
                      SHA256 ;
                      PUSH string "updateSinkAddress" ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      PUSH mutez 0 ;
                      DIG 5 ;
                      DIG 5 ;
                      PAIR ;
                      LAMBDA
                        (pair (pair address (pair nat nat address)) unit)
                        (list operation)
                        { CAR ;
                          UNPAIR ;
                          CONTRACT %updateSinkAddress
                            (pair (nat %number_of_pools) (nat %first_pool) (address %new_sink_address)) ;
                          IF_NONE
                            { DROP ; PUSH string "no updateSinkAddress entrypoint" ; FAILWITH }
                            { NIL operation ; SWAP ; PUSH mutez 0 ; DIG 3 ; TRANSFER_TOKENS ; CONS } } ;
                      SWAP ;
                      APPLY ;
                      DIG 3 ;
                      PAIR ;
                      TRANSFER_TOKENS ;
                      NIL operation ;
                      SWAP ;
                      CONS } ;
                  PAIR }
                { UNPAIR 3 ;
                  DUP 4 ;
                  GET 25 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  DUP 4 ;
                  ADD ;
                  COMPARE ;
                  GT ;
                  IF { DROP 4 ; PUSH nat 130 ; FAILWITH }
                     { DUP 4 ;
                       NIL operation ;
                       DUP 5 ;
                       DIG 3 ;
                       DUP 5 ;
                       ADD ;
                       DIG 4 ;
                       PAIR 5 ;
                       UNPAIR 5 ;
                       PAIR 5 ;
                       LEFT (list operation) ;
                       LOOP_LEFT
                         { UNPAIR 5 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           COMPARE ;
                           EQ ;
                           IF { SWAP ;
                                DIG 2 ;
                                DIG 4 ;
                                DROP 4 ;
                                RIGHT
                                  (pair nat
                                        nat
                                        address
                                        (list operation)
                                        (pair (big_map
                                                 (pair (or (or address (pair address nat)) unit) (or (or address (pair address nat)) unit))
                                                 address)
                                              (big_map nat address)
                                              (or (or address (pair address nat)) unit)
                                              address
                                              (option address)
                                              (big_map string bytes)
                                              (big_map (pair address address) nat)
                                              (big_map nat (pair nat (map string bytes)))
                                              key_hash
                                              nat
                                              nat
                                              (big_map address (pair nat nat))
                                              nat
                                              address)) }
                              { DUP 5 ;
                                GET 3 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH nat 130 ; FAILWITH } {} ;
                                CONTRACT %updateSinkAddress address ;
                                IF_NONE { PUSH nat 131 ; FAILWITH } {} ;
                                DIG 4 ;
                                SWAP ;
                                PUSH mutez 0 ;
                                DUP 6 ;
                                TRANSFER_TOKENS ;
                                CONS ;
                                PUSH nat 1 ;
                                DIG 2 ;
                                ADD ;
                                DIG 4 ;
                                DIG 2 ;
                                DIG 4 ;
                                DIG 4 ;
                                DIG 4 ;
                                PAIR 5 ;
                                LEFT (list operation) } } ;
                       DUG 2 ;
                       SOME ;
                       UPDATE 9 ;
                       SWAP ;
                       PAIR } } } } ;
  view "get_dex_address"
       (pair (or %a_type (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
             (or %b_type (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)))
       (pair address bool)
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CDR ;
         DUP 3 ;
         CAR ;
         PAIR ;
         GET ;
         IF_NONE
           { SWAP ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 2 ;
             CDR ;
             PAIR ;
             GET ;
             IF_NONE { PUSH nat 113 ; FAILWITH } { PUSH bool False ; SWAP ; PAIR } }
           { SWAP ; DIG 2 ; DROP 2 ; PUSH bool True ; SWAP ; PAIR } } }

