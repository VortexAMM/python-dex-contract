{ parameter
    (or (or (or (pair %addLiquidity
                   (address %owner)
                   (pair (nat %amount_token_a)
                         (pair (nat %min_lqt_minted) (pair (nat %max_tokens_deposited) (timestamp %deadline)))))
                (pair %removeLiquidity
                   (address %to_)
                   (pair (nat %lqt_burned)
                         (pair (nat %min_token_a_withdrawn)
                               (pair (nat %min_token_b_withdrawn) (timestamp %deadline))))))
            (or (address %setLqtAddress)
                (pair %swap
                   (address %to)
                   (pair (nat %tokens_sold)
                         (pair (nat %min_tokens_bought) (pair (bool %a_to_b) (timestamp %deadline)))))))
        (or (unit %updateTokenPool)
            (or %updateTokenPoolInternal
               (or (or (nat %fA12InternalA) (nat %fA12InternalB))
                   (or (list %fA2InternalA (pair (pair address nat) nat))
                       (list %fA2InternalB (pair (pair address nat) nat))))
               (unit %updateTokenEnded)))) ;
  storage
    (pair (nat %token_pool_a)
          (pair (nat %token_pool_b)
                (pair (nat %lqt_total)
                      (pair (bool %self_is_updating_token_pool)
                            (pair (address %manager)
                                  (pair (address %token_address_a)
                                        (pair (address %token_address_b)
                                              (pair (address %token_address_smak)
                                                    (pair (option %lqt_address address)
                                                          (pair (or %token_id_a (unit %fA12) (nat %fA2))
                                                                (pair (or %token_id_b (unit %fA12) (nat %fA2))
                                                                      (pair (or %token_id_smak (unit %fA12) (nat %fA2))
                                                                            (pair (big_map %history string nat)
                                                                                  (pair (big_map %user_investments
                                                                                           address
                                                                                           (pair (pair (or %direction (unit %aDD) (unit %rEMOVE)) (nat %token_invest_a))
                                                                                                 (nat %token_invest_b)))
                                                                                        (pair (address %reserve) (pair (nat %last_k) (or %curve (unit %flat) (unit %product)))))))))))))))))) ;
  code { LAMBDA
           (pair (list operation) (list operation))
           (list operation)
           { UNPAIR ; SWAP ; ITER { CONS } } ;
         LAMBDA
           (pair (option operation) (option operation))
           (list operation)
           { UNPAIR ;
             IF_NONE
               { IF_NONE { NIL operation } { NIL operation ; SWAP ; CONS } }
               { SWAP ;
                 IF_NONE
                   { NIL operation ; SWAP ; CONS }
                   { NIL operation ; SWAP ; CONS ; SWAP ; CONS } } } ;
         LAMBDA
           (pair nat nat)
           (pair nat nat)
           { UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             ADD ;
             DUG 2 ;
             SUB ;
             SWAP ;
             DUP ;
             DUP ;
             DUG 3 ;
             MUL ;
             DUP ;
             MUL ;
             DUP ;
             MUL ;
             DIG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUP ;
             DUG 4 ;
             MUL ;
             DUP ;
             MUL ;
             DUP ;
             MUL ;
             PUSH int 0 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             IF { DIG 3 ; DROP ; PUSH int 0 }
                { DIG 3 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  EDIV ;
                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                  CAR } ;
             DIG 2 ;
             ADD ;
             ABS ;
             PUSH nat 8 ;
             MUL ;
             SWAP ;
             DIG 2 ;
             SUB ;
             ABS ;
             PAIR } ;
         LAMBDA
           (pair (lambda (pair nat nat) (pair nat nat)) (pair nat (pair nat nat)))
           nat
           { UNPAIR ;
             SWAP ;
             UNPAIR 3 ;
             DUP ;
             DUP 3 ;
             SWAP ;
             PAIR ;
             DUP 5 ;
             SWAP ;
             EXEC ;
             CAR ;
             DUG 2 ;
             PAIR ;
             SWAP ;
             PUSH int 5 ;
             PAIR ;
             PUSH nat 0 ;
             DIG 3 ;
             PAIR ;
             PAIR ;
             PAIR ;
             LEFT nat ;
             LOOP_LEFT
               { PUSH int 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { CAR ; CAR ; CDR ; RIGHT (pair (pair (pair nat nat) (pair int nat)) (pair nat nat)) }
                    { DUP ;
                      CAR ;
                      CAR ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CAR ;
                      ADD ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      DUP 3 ;
                      CDR ;
                      CDR ;
                      SUB ;
                      ABS ;
                      SWAP ;
                      PAIR ;
                      DUP 3 ;
                      SWAP ;
                      EXEC ;
                      UNPAIR ;
                      SWAP ;
                      DUP 3 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      DIG 2 ;
                      SUB ;
                      EDIV ;
                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                      CAR ;
                      ABS ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      ADD ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DUP 3 ;
                      CAR ;
                      CDR ;
                      DIG 2 ;
                      DUP 4 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      PUSH int 1 ;
                      DIG 4 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      SUB ;
                      PAIR ;
                      DIG 2 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      LEFT nat } } ;
             SWAP ;
             DROP } ;
         SWAP ;
         APPLY ;
         DIG 3 ;
         UNPAIR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         GT ;
         IF { PUSH nat 2 ; FAILWITH } {} ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { UNPAIR 5 ;
                     DUP 6 ;
                     GET 7 ;
                     IF { PUSH nat 201 ; FAILWITH } {} ;
                     DIG 4 ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF { PUSH nat 202 ; FAILWITH } {} ;
                     DUP 5 ;
                     CAR ;
                     DUP 6 ;
                     GET 3 ;
                     DUP 4 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 6 ;
                     CAR ;
                     DUP 7 ;
                     GET 5 ;
                     DUP 5 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 7 ;
                     GET 3 ;
                     DUP 8 ;
                     GET 5 ;
                     DUP 4 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP ;
                     DUP 3 ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { SWAP ; DROP } ;
                     DIG 5 ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     IF { DROP 8 ; PUSH nat 203 ; FAILWITH }
                        { DIG 4 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          COMPARE ;
                          LT ;
                          IF { DROP 7 ; PUSH nat 204 ; FAILWITH }
                             { DUP ;
                               DUP 6 ;
                               GET 5 ;
                               ADD ;
                               DUP 5 ;
                               DUP 7 ;
                               CAR ;
                               ADD ;
                               DUP 4 ;
                               DUP 8 ;
                               GET 3 ;
                               ADD ;
                               DUP 8 ;
                               GET 27 ;
                               DUP 6 ;
                               DUP 9 ;
                               UNIT ;
                               LEFT unit ;
                               PAIR ;
                               PAIR ;
                               SOME ;
                               SENDER ;
                               UPDATE ;
                               DUP 9 ;
                               DIG 4 ;
                               UPDATE 5 ;
                               DUP 4 ;
                               UPDATE 1 ;
                               DUP 3 ;
                               UPDATE 3 ;
                               DIG 8 ;
                               GET 25 ;
                               DUP 4 ;
                               SOME ;
                               PUSH string "token_pool_b" ;
                               UPDATE ;
                               DUP 5 ;
                               SOME ;
                               PUSH string "token_pool_a" ;
                               UPDATE ;
                               UPDATE 25 ;
                               SWAP ;
                               UPDATE 27 ;
                               SWAP ;
                               DIG 2 ;
                               MUL ;
                               UPDATE 31 ;
                               DUP ;
                               SENDER ;
                               SELF_ADDRESS ;
                               DIG 7 ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 4 ;
                               PUSH nat 0 ;
                               DUP 5 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 4 ; NONE operation }
                                  { DUP ;
                                    GET 19 ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 11 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 11 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        DIG 6 ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               SENDER ;
                               SELF_ADDRESS ;
                               DIG 6 ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 4 ;
                               PUSH nat 0 ;
                               DUP 5 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 4 ; NONE operation }
                                  { DUP ;
                                    GET 21 ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 13 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 13 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        DIG 6 ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } ;
                               PUSH int 0 ;
                               DUP 5 ;
                               INT ;
                               COMPARE ;
                               EQ ;
                               IF { DIG 3 ; DIG 4 ; DROP 2 ; NIL operation }
                                  { DUP 3 ;
                                    GET 17 ;
                                    IF_NONE { PUSH nat 217 ; FAILWITH } {} ;
                                    CONTRACT %mintOrBurn (pair (int %quantity) (address %target)) ;
                                    IF_NONE { PUSH nat 205 ; FAILWITH } {} ;
                                    NIL operation ;
                                    SWAP ;
                                    PUSH mutez 0 ;
                                    DIG 6 ;
                                    INT ;
                                    DIG 7 ;
                                    SWAP ;
                                    PAIR ;
                                    TRANSFER_TOKENS ;
                                    CONS } ;
                               DUG 3 ;
                               SWAP ;
                               PAIR ;
                               DIG 3 ;
                               SWAP ;
                               EXEC ;
                               DIG 2 ;
                               SWAP ;
                               PAIR ;
                               DIG 2 ;
                               SWAP ;
                               EXEC ;
                               PAIR } } }
                   { UNPAIR 5 ;
                     DUP 6 ;
                     GET 7 ;
                     IF { PUSH nat 201 ; FAILWITH } {} ;
                     DIG 4 ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF { PUSH nat 202 ; FAILWITH } {} ;
                     DUP 5 ;
                     GET 5 ;
                     DUP 6 ;
                     CAR ;
                     DUP 4 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 6 ;
                     GET 5 ;
                     DUP 7 ;
                     GET 3 ;
                     DUP 5 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DIG 4 ;
                     DUP 3 ;
                     COMPARE ;
                     LT ;
                     IF { DROP 8 ; PUSH nat 206 ; FAILWITH }
                        { DIG 4 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          COMPARE ;
                          LT ;
                          IF { DROP 7 ; PUSH nat 206 ; FAILWITH }
                             { DUP 4 ;
                               DUP 6 ;
                               GET 5 ;
                               SUB ;
                               ISNAT ;
                               IF_NONE { PUSH nat 207 ; FAILWITH } {} ;
                               DUP 3 ;
                               DUP 7 ;
                               CAR ;
                               SUB ;
                               ISNAT ;
                               IF_NONE { PUSH nat 208 ; FAILWITH } {} ;
                               DUP 3 ;
                               DUP 8 ;
                               GET 3 ;
                               SUB ;
                               ISNAT ;
                               IF_NONE { PUSH nat 208 ; FAILWITH } {} ;
                               DUP 8 ;
                               GET 27 ;
                               DUP 5 ;
                               DUP 7 ;
                               UNIT ;
                               RIGHT unit ;
                               PAIR ;
                               PAIR ;
                               SOME ;
                               SENDER ;
                               UPDATE ;
                               DUP 9 ;
                               SENDER ;
                               DIG 9 ;
                               PUSH int 0 ;
                               SUB ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 3 ;
                               PUSH int 0 ;
                               DUP 4 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 3 ; NIL operation }
                                  { GET 17 ;
                                    IF_NONE { PUSH nat 217 ; FAILWITH } {} ;
                                    CONTRACT %mintOrBurn (pair (int %quantity) (address %target)) ;
                                    IF_NONE { PUSH nat 205 ; FAILWITH } {} ;
                                    NIL operation ;
                                    SWAP ;
                                    PUSH mutez 0 ;
                                    DIG 4 ;
                                    DIG 4 ;
                                    SWAP ;
                                    PAIR ;
                                    TRANSFER_TOKENS ;
                                    CONS } ;
                               DUP 9 ;
                               SELF_ADDRESS ;
                               DUP 10 ;
                               DIG 8 ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 4 ;
                               PUSH nat 0 ;
                               DUP 5 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 4 ; NONE operation }
                                  { DUP ;
                                    GET 21 ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 13 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 13 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        DIG 6 ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } ;
                               DUP 9 ;
                               SELF_ADDRESS ;
                               DIG 9 ;
                               DIG 9 ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 4 ;
                               PUSH nat 0 ;
                               DUP 5 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 4 ; NONE operation }
                                  { DUP ;
                                    GET 19 ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 11 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 11 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        DIG 6 ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } ;
                               DUP 8 ;
                               DIG 7 ;
                               UPDATE 5 ;
                               DUP 7 ;
                               UPDATE 1 ;
                               DUP 6 ;
                               UPDATE 3 ;
                               DIG 7 ;
                               GET 25 ;
                               DUP 8 ;
                               SOME ;
                               PUSH string "token_pool_a" ;
                               UPDATE ;
                               DUP 7 ;
                               SOME ;
                               PUSH string "token_pool_b" ;
                               UPDATE ;
                               UPDATE 25 ;
                               DIG 4 ;
                               UPDATE 27 ;
                               DIG 4 ;
                               DIG 5 ;
                               MUL ;
                               UPDATE 31 ;
                               DUG 3 ;
                               SWAP ;
                               PAIR ;
                               DIG 3 ;
                               SWAP ;
                               EXEC ;
                               SWAP ;
                               PAIR ;
                               DIG 2 ;
                               SWAP ;
                               EXEC ;
                               PAIR } } } }
               { IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DROP 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 7 ;
                     IF { PUSH nat 201 ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 9 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH nat 3 ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 17 ;
                     IF_NONE
                       { SOME ; UPDATE 17 ; NIL operation ; PAIR }
                       { DROP 3 ; PUSH nat 212 ; FAILWITH } }
                   { UNPAIR 5 ;
                     DUP 6 ;
                     GET 7 ;
                     IF { PUSH nat 201 ; FAILWITH } {} ;
                     DIG 4 ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF { PUSH nat 202 ; FAILWITH } {} ;
                     DUP 5 ;
                     GET 19 ;
                     DUP 6 ;
                     GET 11 ;
                     PAIR ;
                     DUP 6 ;
                     GET 23 ;
                     DUP 7 ;
                     GET 15 ;
                     PAIR ;
                     LAMBDA
                       (pair (pair address (or unit nat)) (pair address (or unit nat)))
                       bool
                       { UNPAIR ;
                         UNPAIR ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         DIG 3 ;
                         IF_LEFT
                           { DROP ;
                             IF_LEFT { DROP ; PUSH bool True } { DROP ; PUSH bool False } }
                           { SWAP ;
                             IF_LEFT { DROP 2 ; PUSH bool False } { SWAP ; COMPARE ; EQ } } ;
                         SWAP ;
                         DIG 2 ;
                         COMPARE ;
                         EQ ;
                         AND } ;
                     SWAP ;
                     APPLY ;
                     SWAP ;
                     EXEC ;
                     IF { UNIT ; LEFT unit ; SOME }
                        { DUP 5 ;
                          GET 21 ;
                          DUP 6 ;
                          GET 13 ;
                          PAIR ;
                          DUP 6 ;
                          GET 23 ;
                          DUP 7 ;
                          GET 15 ;
                          PAIR ;
                          LAMBDA
                            (pair (pair address (or unit nat)) (pair address (or unit nat)))
                            bool
                            { UNPAIR ;
                              UNPAIR ;
                              DIG 2 ;
                              UNPAIR ;
                              SWAP ;
                              DIG 3 ;
                              IF_LEFT
                                { DROP ;
                                  IF_LEFT { DROP ; PUSH bool True } { DROP ; PUSH bool False } }
                                { SWAP ;
                                  IF_LEFT { DROP 2 ; PUSH bool False } { SWAP ; COMPARE ; EQ } } ;
                              SWAP ;
                              DIG 2 ;
                              COMPARE ;
                              EQ ;
                              AND } ;
                          SWAP ;
                          APPLY ;
                          SWAP ;
                          EXEC ;
                          IF { UNIT ; RIGHT unit ; SOME } { NONE (or unit unit) } } ;
                     IF_NONE
                       { DUP 5 ;
                         GET 32 ;
                         IF_LEFT { DROP ; PUSH nat 9990 } { DROP ; PUSH nat 9972 } ;
                         DUP 5 ;
                         IF { PUSH nat 0 ;
                              PUSH nat 0 ;
                              DIG 2 ;
                              DUP 5 ;
                              MUL ;
                              DUP 8 ;
                              CAR ;
                              DUP 9 ;
                              GET 3 ;
                              DUP 10 ;
                              GET 32 ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              UNPAIR 4 ;
                              DIG 3 ;
                              IF_LEFT
                                { DROP ;
                                  PUSH nat 10000 ;
                                  DIG 2 ;
                                  DIG 3 ;
                                  DIG 3 ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  DIG 9 ;
                                  SWAP ;
                                  EXEC ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR }
                                { DIG 11 ;
                                  DROP 2 ;
                                  DUP ;
                                  PUSH nat 10000 ;
                                  DIG 3 ;
                                  MUL ;
                                  ADD ;
                                  DUG 2 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR } ;
                              PAIR ;
                              PAIR }
                            { PUSH nat 0 ;
                              PUSH nat 0 ;
                              DIG 2 ;
                              DUP 5 ;
                              MUL ;
                              DUP 8 ;
                              GET 3 ;
                              DUP 9 ;
                              CAR ;
                              DUP 10 ;
                              GET 32 ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              UNPAIR 4 ;
                              DIG 3 ;
                              IF_LEFT
                                { DROP ;
                                  PUSH nat 10000 ;
                                  DIG 2 ;
                                  DIG 3 ;
                                  DIG 3 ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  DIG 9 ;
                                  SWAP ;
                                  EXEC ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR }
                                { DIG 11 ;
                                  DROP 2 ;
                                  DUP ;
                                  PUSH nat 10000 ;
                                  DIG 3 ;
                                  MUL ;
                                  ADD ;
                                  DUG 2 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR } ;
                              PAIR ;
                              PAIR } }
                       { DUP 6 ;
                         GET 32 ;
                         IF_LEFT { DROP ; PUSH nat 9990 } { DROP ; PUSH nat 9972 } ;
                         DUP ;
                         PUSH nat 10000 ;
                         SUB ;
                         ABS ;
                         DIG 2 ;
                         IF_LEFT
                           { DROP ;
                             DUP 6 ;
                             IF { SWAP ;
                                  DUP 4 ;
                                  MUL ;
                                  DUP 6 ;
                                  IF { DUP 7 ; CAR } { DUP 7 ; GET 3 } ;
                                  DUP 7 ;
                                  IF { DUP 8 ; GET 3 } { DUP 8 ; CAR } ;
                                  DUP 9 ;
                                  GET 32 ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  UNPAIR 4 ;
                                  DIG 3 ;
                                  IF_LEFT
                                    { DROP ;
                                      PUSH nat 10000 ;
                                      DIG 2 ;
                                      DIG 3 ;
                                      DIG 3 ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      DIG 8 ;
                                      SWAP ;
                                      EXEC ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR }
                                    { DIG 10 ;
                                      DROP 2 ;
                                      DUP ;
                                      PUSH nat 10000 ;
                                      DIG 3 ;
                                      MUL ;
                                      ADD ;
                                      DUG 2 ;
                                      MUL ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR } ;
                                  PUSH nat 0 ;
                                  PUSH nat 10000 ;
                                  DUP 6 ;
                                  DIG 4 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  DIG 2 ;
                                  PAIR ;
                                  PAIR }
                                { DUP 7 ;
                                  GET 32 ;
                                  IF_LEFT
                                    { DROP ;
                                      PUSH nat 10000 ;
                                      DUP 3 ;
                                      DUP 8 ;
                                      IF { DUP 9 ; CAR } { DUP 9 ; GET 3 } ;
                                      MUL ;
                                      DUP 8 ;
                                      IF { DUP 9 ; GET 3 } { DUP 9 ; CAR } ;
                                      DUP 7 ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      DIG 9 ;
                                      SWAP ;
                                      EXEC ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR }
                                    { DIG 8 ;
                                      DROP 2 ;
                                      DUP 4 ;
                                      DUP 7 ;
                                      IF { DUP 8 ; CAR } { DUP 8 ; GET 3 } ;
                                      ADD ;
                                      DUP 7 ;
                                      IF { DUP 8 ; GET 3 } { DUP 8 ; CAR } ;
                                      DUP 6 ;
                                      MUL ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR } ;
                                  PUSH nat 0 ;
                                  PUSH nat 10000 ;
                                  DUP 3 ;
                                  DIG 4 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  PUSH nat 10000 ;
                                  DIG 3 ;
                                  DIG 4 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  PAIR ;
                                  PAIR } }
                           { DROP ;
                             DUP 6 ;
                             IF { DUP 7 ;
                                  GET 32 ;
                                  IF_LEFT
                                    { DROP ;
                                      PUSH nat 10000 ;
                                      DUP 3 ;
                                      DUP 8 ;
                                      IF { DUP 9 ; CAR } { DUP 9 ; GET 3 } ;
                                      MUL ;
                                      DUP 8 ;
                                      IF { DUP 9 ; GET 3 } { DUP 9 ; CAR } ;
                                      DUP 7 ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      DIG 9 ;
                                      SWAP ;
                                      EXEC ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR }
                                    { DIG 8 ;
                                      DROP 2 ;
                                      DUP 4 ;
                                      DUP 7 ;
                                      IF { DUP 8 ; CAR } { DUP 8 ; GET 3 } ;
                                      ADD ;
                                      DUP 7 ;
                                      IF { DUP 8 ; GET 3 } { DUP 8 ; CAR } ;
                                      DUP 6 ;
                                      MUL ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR } ;
                                  PUSH nat 10000 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  DIG 3 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  PUSH nat 0 ;
                                  PUSH nat 10000 ;
                                  DIG 3 ;
                                  DIG 4 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  PAIR ;
                                  PAIR }
                                { SWAP ;
                                  DUP 4 ;
                                  MUL ;
                                  DUP 6 ;
                                  IF { DUP 7 ; CAR } { DUP 7 ; GET 3 } ;
                                  DUP 7 ;
                                  IF { DUP 8 ; GET 3 } { DUP 8 ; CAR } ;
                                  DUP 9 ;
                                  GET 32 ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  SWAP ;
                                  PAIR ;
                                  UNPAIR 4 ;
                                  DIG 3 ;
                                  IF_LEFT
                                    { DROP ;
                                      PUSH nat 10000 ;
                                      DIG 2 ;
                                      DIG 3 ;
                                      DIG 3 ;
                                      SWAP ;
                                      PAIR ;
                                      SWAP ;
                                      PAIR ;
                                      DIG 8 ;
                                      SWAP ;
                                      EXEC ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR }
                                    { DIG 10 ;
                                      DROP 2 ;
                                      DUP ;
                                      PUSH nat 10000 ;
                                      DIG 3 ;
                                      MUL ;
                                      ADD ;
                                      DUG 2 ;
                                      MUL ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR } ;
                                  PUSH nat 10000 ;
                                  DUP 5 ;
                                  DIG 3 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  PUSH nat 0 ;
                                  DIG 2 ;
                                  PAIR ;
                                  PAIR } } } ;
                     UNPAIR ;
                     UNPAIR ;
                     DIG 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     LT ;
                     IF { DROP 9 ; PUSH nat 209 ; FAILWITH }
                        { DUP 6 ;
                          IF { DUP 3 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               DUP 9 ;
                               GET 3 ;
                               SUB ;
                               SUB ;
                               DUP 3 ;
                               DUP 7 ;
                               DUP 10 ;
                               CAR ;
                               ADD ;
                               SUB ;
                               PAIR }
                             { DUP 3 ;
                               DUP 6 ;
                               DUP 9 ;
                               GET 3 ;
                               ADD ;
                               SUB ;
                               DUP 3 ;
                               DUP 3 ;
                               DUP 10 ;
                               CAR ;
                               SUB ;
                               SUB ;
                               PAIR } ;
                          UNPAIR ;
                          ISNAT ;
                          IF_NONE { PUSH nat 210 ; FAILWITH } {} ;
                          SWAP ;
                          ISNAT ;
                          IF_NONE { PUSH nat 210 ; FAILWITH } {} ;
                          DIG 7 ;
                          IF { DUP 8 ;
                               SELF_ADDRESS ;
                               DIG 7 ;
                               DIG 5 ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 4 ;
                               PUSH nat 0 ;
                               DUP 5 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 4 ; NONE operation }
                                  { DUP ;
                                    GET 21 ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 13 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 13 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        DIG 6 ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } ;
                               DUP 7 ;
                               SENDER ;
                               SELF_ADDRESS ;
                               DIG 8 ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 4 ;
                               PUSH nat 0 ;
                               DUP 5 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 4 ; NONE operation }
                                  { DUP ;
                                    GET 19 ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 11 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 11 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        DIG 6 ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } ;
                               PAIR }
                             { DUP 8 ;
                               SENDER ;
                               SELF_ADDRESS ;
                               DIG 9 ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 4 ;
                               PUSH nat 0 ;
                               DUP 5 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 4 ; NONE operation }
                                  { DUP ;
                                    GET 21 ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 13 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 13 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        DIG 6 ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } ;
                               DUP 8 ;
                               SELF_ADDRESS ;
                               DIG 8 ;
                               DIG 6 ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 4 ;
                               PUSH nat 0 ;
                               DUP 5 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 4 ; NONE operation }
                                  { DUP ;
                                    GET 19 ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 11 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 11 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        DIG 6 ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } ;
                               PAIR } ;
                          DUP 7 ;
                          SWAP ;
                          EXEC ;
                          DUP 6 ;
                          GET 19 ;
                          DUP 7 ;
                          GET 11 ;
                          PAIR ;
                          DUP 7 ;
                          GET 23 ;
                          DUP 8 ;
                          GET 15 ;
                          PAIR ;
                          LAMBDA
                            (pair (pair address (or unit nat)) (pair address (or unit nat)))
                            bool
                            { UNPAIR ;
                              UNPAIR ;
                              DIG 2 ;
                              UNPAIR ;
                              SWAP ;
                              DIG 3 ;
                              IF_LEFT
                                { DROP ;
                                  IF_LEFT { DROP ; PUSH bool True } { DROP ; PUSH bool False } }
                                { SWAP ;
                                  IF_LEFT { DROP 2 ; PUSH bool False } { SWAP ; COMPARE ; EQ } } ;
                              SWAP ;
                              DIG 2 ;
                              COMPARE ;
                              EQ ;
                              AND } ;
                          SWAP ;
                          APPLY ;
                          SWAP ;
                          EXEC ;
                          IF { UNIT ; LEFT unit ; SOME }
                             { DUP 6 ;
                               GET 21 ;
                               DUP 7 ;
                               GET 13 ;
                               PAIR ;
                               DUP 7 ;
                               GET 23 ;
                               DUP 8 ;
                               GET 15 ;
                               PAIR ;
                               LAMBDA
                                 (pair (pair address (or unit nat)) (pair address (or unit nat)))
                                 bool
                                 { UNPAIR ;
                                   UNPAIR ;
                                   DIG 2 ;
                                   UNPAIR ;
                                   SWAP ;
                                   DIG 3 ;
                                   IF_LEFT
                                     { DROP ;
                                       IF_LEFT { DROP ; PUSH bool True } { DROP ; PUSH bool False } }
                                     { SWAP ;
                                       IF_LEFT { DROP 2 ; PUSH bool False } { SWAP ; COMPARE ; EQ } } ;
                                   SWAP ;
                                   DIG 2 ;
                                   COMPARE ;
                                   EQ ;
                                   AND } ;
                               SWAP ;
                               APPLY ;
                               SWAP ;
                               EXEC ;
                               IF { UNIT ; RIGHT unit ; SOME } { NONE (or unit unit) } } ;
                          IF_NONE
                            { DIG 3 ;
                              DIG 4 ;
                              DROP 2 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              DUP 4 ;
                              MUL ;
                              DUP 5 ;
                              GET 31 ;
                              PUSH nat 3 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              COMPARE ;
                              GT ;
                              IF { PUSH nat 1 ;
                                   PUSH nat 2 ;
                                   DUP 3 ;
                                   EDIV ;
                                   IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                   CAR ;
                                   ADD ;
                                   SWAP ;
                                   DUP ;
                                   DIG 2 ;
                                   PAIR ;
                                   PAIR ;
                                   LEFT nat ;
                                   LOOP_LEFT
                                     { UNPAIR ;
                                       UNPAIR ;
                                       DUP 3 ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       COMPARE ;
                                       LT ;
                                       IF { DIG 2 ;
                                            DROP ;
                                            DUP ;
                                            DUP 3 ;
                                            PUSH nat 2 ;
                                            DIG 3 ;
                                            DUP ;
                                            DIG 5 ;
                                            EDIV ;
                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                            CAR ;
                                            ADD ;
                                            EDIV ;
                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            LEFT nat }
                                          { DROP 2 ; RIGHT (pair (pair nat nat) nat) } } }
                                 { PUSH nat 0 ;
                                   SWAP ;
                                   COMPARE ;
                                   NEQ ;
                                   IF { PUSH nat 1 } { PUSH nat 0 } } ;
                              PUSH nat 3 ;
                              DUP 3 ;
                              COMPARE ;
                              GT ;
                              IF { PUSH nat 1 ;
                                   PUSH nat 2 ;
                                   DUP 4 ;
                                   EDIV ;
                                   IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                   CAR ;
                                   ADD ;
                                   DIG 2 ;
                                   DUP ;
                                   DIG 2 ;
                                   PAIR ;
                                   PAIR ;
                                   LEFT nat ;
                                   LOOP_LEFT
                                     { UNPAIR ;
                                       UNPAIR ;
                                       DUP 3 ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       COMPARE ;
                                       LT ;
                                       IF { DIG 2 ;
                                            DROP ;
                                            DUP ;
                                            DUP 3 ;
                                            PUSH nat 2 ;
                                            DIG 3 ;
                                            DUP ;
                                            DIG 5 ;
                                            EDIV ;
                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                            CAR ;
                                            ADD ;
                                            EDIV ;
                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            LEFT nat }
                                          { DROP 2 ; RIGHT (pair (pair nat nat) nat) } } }
                                 { PUSH nat 0 ;
                                   DIG 2 ;
                                   COMPARE ;
                                   NEQ ;
                                   IF { PUSH nat 1 } { PUSH nat 0 } } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              SUB ;
                              ISNAT ;
                              IF_NONE
                                { DROP 2 ; PUSH nat 218 ; FAILWITH }
                                { DUG 2 ;
                                  PUSH nat 25 ;
                                  MUL ;
                                  PUSH nat 3 ;
                                  SWAP ;
                                  EDIV ;
                                  IF_NONE
                                    { PUSH string "DIV by 0" ; FAILWITH }
                                    { UNPAIR ;
                                      PUSH nat 0 ;
                                      DIG 2 ;
                                      COMPARE ;
                                      EQ ;
                                      IF {} { PUSH nat 1 ; ADD } } ;
                                  ADD ;
                                  DUP 6 ;
                                  GET 5 ;
                                  DIG 2 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  DUP ;
                                  DUP 6 ;
                                  GET 5 ;
                                  ADD ;
                                  DUP 5 ;
                                  DUP 3 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  DUP 7 ;
                                  GET 5 ;
                                  ADD ;
                                  DUP 5 ;
                                  DIG 3 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  DUP 6 ;
                                  SUB ;
                                  ISNAT ;
                                  IF_NONE { PUSH nat 219 ; FAILWITH } {} ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  DUP 6 ;
                                  SUB ;
                                  ISNAT ;
                                  IF_NONE { PUSH nat 220 ; FAILWITH } {} ;
                                  DIG 2 ;
                                  DIG 3 ;
                                  PAIR ;
                                  SWAP ;
                                  DIG 2 ;
                                  PAIR ;
                                  PAIR } }
                            { DROP ; DIG 4 ; DIG 4 ; PAIR ; DUP 3 ; DUP 5 ; PAIR ; PAIR } ;
                          UNIT ;
                          LEFT nat ;
                          DUP 6 ;
                          GET 15 ;
                          PAIR ;
                          DUP 6 ;
                          GET 19 ;
                          DUP 7 ;
                          GET 11 ;
                          PAIR ;
                          LAMBDA
                            (pair (pair address (or unit nat)) (pair address (or unit nat)))
                            bool
                            { UNPAIR ;
                              UNPAIR ;
                              DIG 2 ;
                              UNPAIR ;
                              SWAP ;
                              DIG 3 ;
                              IF_LEFT
                                { DROP ;
                                  IF_LEFT { DROP ; PUSH bool True } { DROP ; PUSH bool False } }
                                { SWAP ;
                                  IF_LEFT { DROP 2 ; PUSH bool False } { SWAP ; COMPARE ; EQ } } ;
                              SWAP ;
                              DIG 2 ;
                              COMPARE ;
                              EQ ;
                              AND } ;
                          SWAP ;
                          APPLY ;
                          SWAP ;
                          EXEC ;
                          IF { DUP 5 ;
                               SELF_ADDRESS ;
                               DUP 3 ;
                               CDR ;
                               CAR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 3 ;
                               PUSH nat 0 ;
                               DUP 4 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 3 ; NONE operation }
                                  { UNIT ;
                                    LEFT nat ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 15 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        PUSH address "tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU" ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 15 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        PUSH address "tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU" ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } }
                             { DUP 5 ;
                               SELF_ADDRESS ;
                               DUP 7 ;
                               GET 29 ;
                               DUP 4 ;
                               CDR ;
                               CAR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 4 ;
                               PUSH nat 0 ;
                               DUP 5 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 4 ; NONE operation }
                                  { DUP ;
                                    GET 19 ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 11 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 11 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        DIG 6 ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } } ;
                          UNIT ;
                          LEFT nat ;
                          DUP 7 ;
                          GET 15 ;
                          PAIR ;
                          DUP 7 ;
                          GET 21 ;
                          DUP 8 ;
                          GET 13 ;
                          PAIR ;
                          LAMBDA
                            (pair (pair address (or unit nat)) (pair address (or unit nat)))
                            bool
                            { UNPAIR ;
                              UNPAIR ;
                              DIG 2 ;
                              UNPAIR ;
                              SWAP ;
                              DIG 3 ;
                              IF_LEFT
                                { DROP ;
                                  IF_LEFT { DROP ; PUSH bool True } { DROP ; PUSH bool False } }
                                { SWAP ;
                                  IF_LEFT { DROP 2 ; PUSH bool False } { SWAP ; COMPARE ; EQ } } ;
                              SWAP ;
                              DIG 2 ;
                              COMPARE ;
                              EQ ;
                              AND } ;
                          SWAP ;
                          APPLY ;
                          SWAP ;
                          EXEC ;
                          IF { DUP 6 ;
                               SELF_ADDRESS ;
                               DUP 4 ;
                               CDR ;
                               CDR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 3 ;
                               PUSH nat 0 ;
                               DUP 4 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 3 ; NONE operation }
                                  { UNIT ;
                                    LEFT nat ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 15 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        PUSH address "tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU" ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 15 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        PUSH address "tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU" ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } }
                             { DUP 6 ;
                               SELF_ADDRESS ;
                               DUP 8 ;
                               GET 29 ;
                               DUP 5 ;
                               CDR ;
                               CDR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               PAIR ;
                               UNPAIR 4 ;
                               PUSH nat 0 ;
                               DUP 5 ;
                               COMPARE ;
                               EQ ;
                               IF { DROP 4 ; NONE operation }
                                  { DUP ;
                                    GET 21 ;
                                    IF_LEFT
                                      { DROP ;
                                        GET 13 ;
                                        CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))) ;
                                        IF_NONE { PUSH nat 0 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        DIG 2 ;
                                        DIG 3 ;
                                        DIG 4 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        TRANSFER_TOKENS ;
                                        SOME }
                                      { SWAP ;
                                        GET 13 ;
                                        CONTRACT %transfer
                                          (list (pair (address %from_)
                                                      (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                        IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                                        PUSH mutez 0 ;
                                        NIL (pair address (list (pair address (pair nat nat)))) ;
                                        DIG 4 ;
                                        NIL (pair address (pair nat nat)) ;
                                        DIG 6 ;
                                        DIG 6 ;
                                        DIG 7 ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        SWAP ;
                                        PAIR ;
                                        CONS ;
                                        TRANSFER_TOKENS ;
                                        SOME } } } ;
                          SWAP ;
                          PAIR ;
                          DIG 6 ;
                          SWAP ;
                          EXEC ;
                          DUP 6 ;
                          DUP 3 ;
                          CAR ;
                          CAR ;
                          UPDATE 1 ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          UPDATE 3 ;
                          DIG 6 ;
                          GET 25 ;
                          DIG 6 ;
                          SOME ;
                          PUSH string "token_pool_a" ;
                          UPDATE ;
                          DIG 5 ;
                          SOME ;
                          PUSH string "token_pool_b" ;
                          UPDATE ;
                          UPDATE 25 ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          MUL ;
                          UPDATE 31 ;
                          DUG 2 ;
                          SWAP ;
                          PAIR ;
                          DIG 2 ;
                          SWAP ;
                          EXEC ;
                          PAIR } } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DROP 3 ;
             IF_LEFT
               { DROP ;
                 SOURCE ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH nat 3 ; FAILWITH } {} ;
                 DUP ;
                 GET 7 ;
                 IF { PUSH nat 201 ; FAILWITH } {} ;
                 SELF_ADDRESS ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 19 ;
                 IF_LEFT
                   { DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 11 ;
                     CONTRACT %getBalance (pair address (contract nat)) ;
                     IF_NONE { PUSH nat 213 ; FAILWITH } {} ;
                     SELF_ADDRESS ;
                     CONTRACT %fA12InternalA nat ;
                     IF_NONE { PUSH nat 222 ; FAILWITH } {} ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     DIG 3 ;
                     PAIR ;
                     TRANSFER_TOKENS }
                   { DUP 3 ;
                     GET 11 ;
                     CONTRACT %balance_of
                       (pair (list %requests (pair (address %owner) (nat %token_id)))
                             (contract %callback
                                (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) ;
                     IF_NONE { PUSH nat 214 ; FAILWITH } {} ;
                     SELF_ADDRESS ;
                     CONTRACT %fA2InternalA
                       (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) ;
                     IF_NONE { PUSH nat 221 ; FAILWITH } {} ;
                     SWAP ;
                     PUSH mutez 0 ;
                     NIL (pair address nat) ;
                     DIG 5 ;
                     DIG 5 ;
                     SWAP ;
                     PAIR ;
                     CONS ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     TRANSFER_TOKENS } ;
                 SELF_ADDRESS ;
                 DUP 3 ;
                 GET 21 ;
                 IF_LEFT
                   { DROP ;
                     DUP 3 ;
                     GET 13 ;
                     CONTRACT %getBalance (pair address (contract nat)) ;
                     IF_NONE { PUSH nat 213 ; FAILWITH } {} ;
                     SELF_ADDRESS ;
                     CONTRACT %fA12InternalB nat ;
                     IF_NONE { PUSH nat 222 ; FAILWITH } {} ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     DIG 3 ;
                     PAIR ;
                     TRANSFER_TOKENS }
                   { DUP 4 ;
                     GET 13 ;
                     CONTRACT %balance_of
                       (pair (list %requests (pair (address %owner) (nat %token_id)))
                             (contract %callback
                                (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) ;
                     IF_NONE { PUSH nat 214 ; FAILWITH } {} ;
                     SELF_ADDRESS ;
                     CONTRACT %fA2InternalB
                       (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) ;
                     IF_NONE { PUSH nat 221 ; FAILWITH } {} ;
                     SWAP ;
                     PUSH mutez 0 ;
                     NIL (pair address nat) ;
                     DIG 5 ;
                     DIG 5 ;
                     SWAP ;
                     PAIR ;
                     CONS ;
                     DIG 3 ;
                     SWAP ;
                     PAIR ;
                     TRANSFER_TOKENS } ;
                 SELF_ADDRESS ;
                 CONTRACT %updateTokenEnded unit ;
                 IF_NONE
                   { PUSH int 223 ; FAILWITH }
                   { PUSH mutez 0 ; UNIT ; TRANSFER_TOKENS } ;
                 DIG 3 ;
                 PUSH bool True ;
                 UPDATE 7 ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 DIG 2 ;
                 CONS ;
                 DIG 2 ;
                 CONS ;
                 PAIR }
               { IF_LEFT
                   { IF_LEFT
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 11 ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             DUP 3 ;
                             GET 7 ;
                             NOT ;
                             OR ;
                             IF { PUSH nat 215 ; FAILWITH }
                                { PUSH mutez 0 ;
                                  AMOUNT ;
                                  COMPARE ;
                                  GT ;
                                  IF { PUSH nat 2 ; FAILWITH } {} } ;
                             UPDATE 1 }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 13 ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             DUP 3 ;
                             GET 7 ;
                             NOT ;
                             OR ;
                             IF { PUSH nat 215 ; FAILWITH }
                                { PUSH mutez 0 ;
                                  AMOUNT ;
                                  COMPARE ;
                                  GT ;
                                  IF { PUSH nat 2 ; FAILWITH } {} } ;
                             UPDATE 3 } }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 11 ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             DUP 3 ;
                             GET 7 ;
                             NOT ;
                             OR ;
                             IF { PUSH nat 215 ; FAILWITH }
                                { PUSH mutez 0 ;
                                  AMOUNT ;
                                  COMPARE ;
                                  GT ;
                                  IF { PUSH nat 2 ; FAILWITH } {} } ;
                             IF_CONS
                               { CDR ; SWAP ; IF_CONS { DROP 3 ; PUSH nat 216 ; FAILWITH } {} }
                               { PUSH nat 216 ; FAILWITH } ;
                             UPDATE 1 }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             GET 13 ;
                             SENDER ;
                             COMPARE ;
                             NEQ ;
                             DUP 3 ;
                             GET 7 ;
                             NOT ;
                             OR ;
                             IF { PUSH nat 215 ; FAILWITH }
                                { PUSH mutez 0 ;
                                  AMOUNT ;
                                  COMPARE ;
                                  GT ;
                                  IF { PUSH nat 2 ; FAILWITH } {} } ;
                             IF_CONS
                               { CDR ; SWAP ; IF_CONS { DROP 3 ; PUSH nat 216 ; FAILWITH } {} }
                               { PUSH nat 216 ; FAILWITH } ;
                             UPDATE 3 } } }
                   { DROP ; PUSH bool False ; UPDATE 7 } ;
                 NIL operation ;
                 PAIR } } } }

