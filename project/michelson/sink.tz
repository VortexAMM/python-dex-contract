{ parameter
    (or (or (pair %addExchange
               (address %dex_address)
               (or %token_a (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
               (or %token_b (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)))
            (pair %claim
               (list %tokens (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)))
               (timestamp %deadline)
               (address %reward_to)))
        (or (pair %deposit
               (or %token_to_deposit (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
               (or %reference_token (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
               (nat %burn_amount)
               (nat %reserve_amount)
               (bool %direction))
            (nat %updateClaimLimit))) ;
  storage
    (pair (or %token_type_smak (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
          (address %factory_address)
          (big_map %burn (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)) nat)
          (big_map %reserve (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)) nat)
          (address %reserve_address)
          (nat %token_claim_limit)
          (big_map %exchanges
             (pair (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz))
                   (or (or (address %fa12) (pair %fa2 address nat)) (unit %xtz)))
             address)) ;
  code { UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { DROP 2 ; PUSH nat 319 ; FAILWITH }
                    { UNPAIR 3 ;
                      NIL operation ;
                      DUP 3 ;
                      IF_LEFT
                        { IF_LEFT
                            { DROP }
                            { UNPAIR ;
                              NIL (or (pair address address nat) (pair address address nat)) ;
                              DIG 2 ;
                              DUP 5 ;
                              SELF_ADDRESS ;
                              PAIR 3 ;
                              LEFT (pair address address nat) ;
                              CONS ;
                              DUG 2 ;
                              CONTRACT %update_operators
                                (list (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                          (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))) ;
                              IF_NONE { PUSH nat 304 ; FAILWITH } {} ;
                              PUSH mutez 0 ;
                              DIG 3 ;
                              TRANSFER_TOKENS ;
                              CONS } }
                        { DROP } ;
                      DUP 4 ;
                      IF_LEFT
                        { IF_LEFT
                            { DROP }
                            { UNPAIR ;
                              NIL (or (pair address address nat) (pair address address nat)) ;
                              DIG 2 ;
                              DUP 5 ;
                              SELF_ADDRESS ;
                              PAIR 3 ;
                              LEFT (pair address address nat) ;
                              CONS ;
                              DUG 2 ;
                              CONTRACT %update_operators
                                (list (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                          (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))) ;
                              IF_NONE { PUSH nat 304 ; FAILWITH } {} ;
                              PUSH mutez 0 ;
                              DIG 3 ;
                              TRANSFER_TOKENS ;
                              CONS } }
                        { DROP } ;
                      DIG 4 ;
                      DUP ;
                      GET 12 ;
                      DIG 3 ;
                      SOME ;
                      DIG 5 ;
                      DIG 5 ;
                      PAIR ;
                      UPDATE ;
                      UPDATE 12 ;
                      SWAP ;
                      PAIR } }
               { UNPAIR 3 ;
                 PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SIZE ;
                 COMPARE ;
                 EQ ;
                 IF { DROP 4 ; PUSH nat 322 ; FAILWITH }
                    { DUP 4 ;
                      GET 11 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      SIZE ;
                      COMPARE ;
                      GE ;
                      IF { DROP 4 ; PUSH nat 317 ; FAILWITH }
                         { NIL operation ;
                           SWAP ;
                           ITER { SWAP ;
                                  DUP 5 ;
                                  GET 12 ;
                                  DUP 6 ;
                                  CAR ;
                                  DUP 4 ;
                                  PAIR ;
                                  GET ;
                                  IF_NONE
                                    { DUP 5 ;
                                      GET 12 ;
                                      DUP 3 ;
                                      DUP 7 ;
                                      CAR ;
                                      PAIR ;
                                      GET ;
                                      IF_NONE { PUSH nat 320 ; FAILWITH } { PUSH bool False ; SWAP ; PAIR } }
                                    { PUSH bool True ; SWAP ; PAIR } ;
                                  UNPAIR ;
                                  DUP 7 ;
                                  GET 5 ;
                                  DUP 5 ;
                                  GET ;
                                  IF_NONE { PUSH nat 313 ; FAILWITH } {} ;
                                  DUP 8 ;
                                  GET 7 ;
                                  DUP 6 ;
                                  GET ;
                                  IF_NONE { PUSH nat 314 ; FAILWITH } {} ;
                                  DUP ;
                                  DUP 10 ;
                                  GET 9 ;
                                  SELF_ADDRESS ;
                                  DUP 9 ;
                                  PAIR 4 ;
                                  UNPAIR 4 ;
                                  PUSH nat 0 ;
                                  DUP 5 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { DROP 4 ; NONE operation }
                                     { IF_LEFT
                                         { IF_LEFT
                                             { CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                               IF_NONE { PUSH nat 306 ; FAILWITH } {} ;
                                               PUSH mutez 0 ;
                                               DIG 4 ;
                                               DIG 4 ;
                                               DIG 4 ;
                                               PAIR 3 ;
                                               TRANSFER_TOKENS ;
                                               SOME }
                                             { UNPAIR ;
                                               CONTRACT %transfer
                                                 (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                               IF_NONE { PUSH nat 307 ; FAILWITH } {} ;
                                               PUSH mutez 0 ;
                                               NIL (pair address (list (pair address nat nat))) ;
                                               NIL (pair address nat nat) ;
                                               DIG 7 ;
                                               DIG 5 ;
                                               DIG 7 ;
                                               PAIR 3 ;
                                               CONS ;
                                               DIG 4 ;
                                               PAIR ;
                                               CONS ;
                                               TRANSFER_TOKENS ;
                                               SOME } }
                                         { DROP 2 ;
                                           SELF_ADDRESS ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           COMPARE ;
                                           EQ ;
                                           IF { DROP 2 ; NONE operation }
                                              { CONTRACT unit ;
                                                IF_NONE { PUSH nat 308 ; FAILWITH } {} ;
                                                PUSH mutez 1 ;
                                                DIG 2 ;
                                                MUL ;
                                                UNIT ;
                                                TRANSFER_TOKENS ;
                                                SOME } } } ;
                                  IF_NONE { DIG 4 } { DIG 5 ; SWAP ; CONS } ;
                                  UNIT ;
                                  RIGHT (or address (pair address nat)) ;
                                  DUP 7 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { PUSH mutez 1 ; DUP 4 ; MUL } { PUSH mutez 0 } ;
                                  DUP 5 ;
                                  CONTRACT %swap
                                    (pair (address %t2t_to)
                                          (nat %tokens_sold)
                                          (nat %min_tokens_bought)
                                          (bool %a_to_b)
                                          (timestamp %deadline)) ;
                                  IF_NONE { PUSH nat 300 ; FAILWITH } {} ;
                                  SWAP ;
                                  DUP 9 ;
                                  DIG 7 ;
                                  PUSH nat 0 ;
                                  DUP 8 ;
                                  DUP 13 ;
                                  PAIR 5 ;
                                  TRANSFER_TOKENS ;
                                  PUSH nat 0 ;
                                  DUP 5 ;
                                  COMPARE ;
                                  NEQ ;
                                  IF { CONS } { DROP } ;
                                  PUSH nat 0 ;
                                  DUP 3 ;
                                  DUP 5 ;
                                  ADD ;
                                  COMPARE ;
                                  NEQ ;
                                  IF { DIG 4 ;
                                       IF_LEFT
                                         { IF_LEFT
                                             { SWAP ;
                                               DIG 2 ;
                                               DIG 3 ;
                                               ADD ;
                                               DIG 3 ;
                                               DIG 3 ;
                                               PAIR 3 ;
                                               UNPAIR 3 ;
                                               CONTRACT %approve (pair address nat) ;
                                               IF_NONE { PUSH nat 305 ; FAILWITH } {} ;
                                               PUSH mutez 0 ;
                                               DIG 3 ;
                                               DIG 3 ;
                                               PAIR ;
                                               TRANSFER_TOKENS ;
                                               CONS }
                                             { DIG 2 ; DIG 3 ; DIG 4 ; DROP 4 } }
                                         { DIG 2 ; DIG 3 ; DIG 4 ; DROP 4 } }
                                     { SWAP ; DIG 2 ; DIG 3 ; DIG 4 ; DROP 4 } } ;
                           SWAP ;
                           DIG 2 ;
                           DROP 2 ;
                           PAIR } } } }
           { IF_LEFT
               { UNPAIR 5 ;
                 DIG 4 ;
                 IF { DUP 5 ;
                      GET 12 ;
                      DUG 2 ;
                      DUP ;
                      DUG 3 ;
                      PAIR ;
                      GET ;
                      IF_NONE { PUSH nat 321 ; FAILWITH } {} }
                    { DUP 5 ;
                      GET 12 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      DIG 3 ;
                      PAIR ;
                      GET ;
                      IF_NONE { PUSH nat 321 ; FAILWITH } {} } ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { DROP 4 ; PUSH nat 322 ; FAILWITH }
                    { DUP 4 ;
                      GET 5 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      IF_NONE
                        { DUP 4 ; GET 5 ; DIG 2 ; SOME ; DUP 3 ; UPDATE }
                        { DUP 5 ; GET 5 ; DIG 3 ; DIG 2 ; ADD ; SOME ; DUP 3 ; UPDATE } ;
                      DUP 4 ;
                      GET 7 ;
                      DUP 3 ;
                      GET ;
                      IF_NONE
                        { DUP 4 ; GET 7 ; DIG 3 ; SOME ; DIG 3 ; UPDATE }
                        { DUP 5 ; GET 7 ; DIG 4 ; DIG 2 ; ADD ; SOME ; DIG 3 ; UPDATE } ;
                      DUG 2 ;
                      UPDATE 5 ;
                      SWAP ;
                      UPDATE 7 ;
                      NIL operation ;
                      PAIR } }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { DROP 2 ; PUSH nat 318 ; FAILWITH }
                    { UPDATE 11 ; NIL operation ; PAIR } } } } }

